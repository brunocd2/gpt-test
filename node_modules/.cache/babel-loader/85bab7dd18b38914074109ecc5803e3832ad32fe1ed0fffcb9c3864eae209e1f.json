{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rox\\\\Documents\\\\GitHub\\\\gpt-test-steticLay\\\\src\\\\contexts\\\\global.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalContext = /*#__PURE__*/createContext({});\nexport default function GlobalProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState({\n    name: \"Domazzi\",\n    avatar: \"https://www.w3schools.com/howto/img_avatar.png\"\n  });\n  const [notifications, setNotifications] = useState([{\n    title: 'Um novo relatório mensal está pronto para download!',\n    description: 'O relatório mensal de Operações está pronto para visualização e Download. Verifique todos os dados presentes no relatório.',\n    type: 'description',\n    date: '06/02/2023',\n    file: {\n      title: 'Relatório teste.pdf',\n      type: 'pdf'\n    }\n  }, {\n    title: 'Um novo relatório financeiro está disponível para visualização!',\n    description: 'Em breve!',\n    type: 'payments',\n    date: '06/02/2023'\n  }, {\n    title: 'Notamos gastos anormalmente altos no mês de Fevereiro.',\n    description: 'Em breve!',\n    type: 'warning',\n    date: '06/02/2023'\n  }]);\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [partners, setPartners] = useState([]);\n  const [session, setSession] = useState(null);\n  const [users, setUsers] = useState([]);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      user,\n      setUser,\n      users,\n      setUsers,\n      notifications,\n      setNotifications,\n      products,\n      setProducts,\n      categories,\n      setCategories,\n      partners,\n      setPartners,\n      session,\n      setSession,\n      filteredProducts,\n      setFilteredProducts\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(GlobalProvider, \"DiRLo6iDwJjocwqFilAFC/bAhh4=\");\n_c = GlobalProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","GlobalContext","GlobalProvider","children","user","setUser","name","avatar","notifications","setNotifications","title","description","type","date","file","products","setProducts","filteredProducts","setFilteredProducts","categories","setCategories","partners","setPartners","session","setSession","users","setUsers"],"sources":["C:/Users/Rox/Documents/GitHub/gpt-test-steticLay/src/contexts/global.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const GlobalContext = createContext({});\r\n\r\nexport default function GlobalProvider({ children }) {\r\n  const [user, setUser] = useState({\r\n    name: \"Domazzi\", avatar: \"https://www.w3schools.com/howto/img_avatar.png\"\r\n  });\r\n  const [notifications, setNotifications] = useState([\r\n    {title: 'Um novo relatório mensal está pronto para download!', description: 'O relatório mensal de Operações está pronto para visualização e Download. Verifique todos os dados presentes no relatório.', type: 'description', date: '06/02/2023',\r\n      file: {title: 'Relatório teste.pdf', type: 'pdf'}    \r\n    },\r\n    {title: 'Um novo relatório financeiro está disponível para visualização!', description: 'Em breve!', type: 'payments', date: '06/02/2023'},\r\n    {title: 'Notamos gastos anormalmente altos no mês de Fevereiro.', description: 'Em breve!', type: 'warning', date: '06/02/2023'},\r\n  ]);\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [partners, setPartners] = useState([]);\r\n  const [session, setSession] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      user, setUser, \r\n      users, setUsers,\r\n      notifications, setNotifications,\r\n      products, setProducts,\r\n      categories, setCategories,\r\n      partners, setPartners,\r\n      session, setSession,\r\n      filteredProducts, setFilteredProducts\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE3D,OAAO,MAAMC,aAAa,gBAAGH,aAAa,CAAC,CAAC,CAAC,CAAC;AAE9C,eAAe,SAASI,cAAc,OAAe;EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC;EACjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAC/BM,IAAI,EAAE,SAAS;IAAEC,MAAM,EAAE;EAC3B,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,CACjD;IAACU,KAAK,EAAE,qDAAqD;IAAEC,WAAW,EAAE,4HAA4H;IAAEC,IAAI,EAAE,aAAa;IAAEC,IAAI,EAAE,YAAY;IAC/OC,IAAI,EAAE;MAACJ,KAAK,EAAE,qBAAqB;MAAEE,IAAI,EAAE;IAAK;EAClD,CAAC,EACD;IAACF,KAAK,EAAE,iEAAiE;IAAEC,WAAW,EAAE,WAAW;IAAEC,IAAI,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC1I;IAACH,KAAK,EAAE,wDAAwD;IAAEC,WAAW,EAAE,WAAW;IAAEC,IAAI,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAY,CAAC,CACjI,CAAC;EACF,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAEtC,oBACE,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAC7BI,IAAI;MAAEC,OAAO;MACboB,KAAK;MAAEC,QAAQ;MACflB,aAAa;MAAEC,gBAAgB;MAC/BM,QAAQ;MAAEC,WAAW;MACrBG,UAAU;MAAEC,aAAa;MACzBC,QAAQ;MAAEC,WAAW;MACrBC,OAAO;MAAEC,UAAU;MACnBP,gBAAgB;MAAEC;IACpB,CAAE;IAAA,UACCf;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAE7B;AAAC,GAhCuBD,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}