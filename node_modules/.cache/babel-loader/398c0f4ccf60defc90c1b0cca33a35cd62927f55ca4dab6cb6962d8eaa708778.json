{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rox\\\\Documents\\\\GitHub\\\\gpt-test-steticLay\\\\src\\\\pages\\\\Dashboard\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { CardsArea, ChartsRow, DashboardFilterArea, DashboardHeader, DashboardWrapper, MetricProducts } from \"./styles\";\nimport { GlobalContext } from '../../contexts/global';\nimport Card from './components/Card';\nimport InputWithIcon from '../../components/InputWithIcon';\nimport DefaultDashboardContainer from \"./components/DefaultDashboardContainer\";\nimport BarCharts from \"./components/BarChart\";\nimport PieChart from \"./components/PieChart\";\nimport SearchIcon from '../../assets/icons/search.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n  const {\n    user,\n    session,\n    products,\n    partners,\n    categories\n  } = useContext(GlobalContext);\n  const today = new Date();\n  const [importsToday, setImportsToday] = useState([]);\n  const [category, setCategory] = useState('Categoria');\n  const [imports, setImports] = useState({\n    thisMonth: [],\n    lastMonth: [],\n    diff: 0.0,\n    lastMonthDate: ''\n  });\n  const [singleProducts, setSingleProducts] = useState({\n    thisMonth: [],\n    lastMonth: [],\n    diff: 0.0\n  });\n  const [clients, setClients] = useState({\n    thisMonth: [],\n    lastMonth: [],\n    diff: 0.0\n  });\n  const [pieChartData, setPieChartData] = useState([[\"Procedimentos\", \"Vendas\"], [\"Eletroterapia\", 0], [\"Peelings \", 0], [\"Carboxiterapia\", 0]]);\n  const [barChartData, setBarChartData] = useState([['', 'Última Entrada (un)', 'Última Saída (un)'], ['Set', 0, 0], ['Out', 0, 0], ['Nov', 0, 0], ['Dez', 0, 0], ['Jan', 0, 0], ['Fev', 0, 0]]);\n  const [dates, setDates] = useState([]);\n  const [initialFilter, setInitialFilter] = useState('');\n  const [finalFilter, setFinalFilter] = useState('');\n  const [search, setSearch] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const metricsHeader = ['Procedimento', 'Qtd. Últ-Entrada', 'Qtd. Últ-Saída'];\n  const categoriesOptions = ['Categoria', ...categories];\n  const [metricsBody, setMetricsBody] = useState([]);\n  function getCardsInfos(initialDate, finalDate) {\n    let singleProducts = [];\n    let singleProductsLastMonth = [];\n    let clients = [];\n    let clientsLastMonth = [];\n    let importedProducts = [];\n    let importedProductsLastMonth = [];\n    const firstDayMonth = new Date().setDate(1);\n    let productsLastMonth = products.filter(product => new Date(product.created_at).getTime() < firstDayMonth);\n    if (initialDate && finalDate) {\n      importedProducts = products.filter(product => {\n        const created = new Date(product.created_at).getTime();\n        const updated = new Date(product.updated_at).getTime();\n        const match = updated || created;\n        return match >= initialDate.getTime() && match <= finalDate.getTime();\n      });\n      importedProductsLastMonth = products.filter(product => {\n        const created = new Date(product.created_at).getTime();\n        const updated = new Date(product.updated_at).getTime();\n        const match = updated || created;\n        finalDate.setDate(1);\n        return match >= initialDate.getTime() && match < finalDate.getTime();\n      });\n      setImports(() => ({\n        thisMonth: importedProducts,\n        lastMonth: importedProductsLastMonth,\n        diff: (importedProducts.length - importedProductsLastMonth.length) / importedProductsLastMonth.length * 100\n      }));\n      finalDate.setMonth(finalDate.getMonth() + 1);\n      finalDate.setDate(finalDate.getDate() - 1);\n      products.forEach(product => {\n        const {\n          codigo_acesso_principal,\n          parceiro,\n          created_at\n        } = product;\n        const haveGeneral = singleProducts.some(product => product.codigo_acesso_principal === codigo_acesso_principal);\n        const haveClient = singleProducts.some(product => product.parceiro === parceiro);\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) <= finalDate.getTime();\n        if (!haveGeneral && matchTime) {\n          singleProducts.push(product);\n        } else {}\n        if (!haveClient && matchTime) {\n          clients.push(parceiro);\n        }\n      });\n      productsLastMonth.forEach(product => {\n        const {\n          codigo_acesso_principal,\n          parceiro,\n          created_at\n        } = product;\n        const haveLastMonth = singleProductsLastMonth.some(product => product.codigo_acesso_principal === codigo_acesso_principal);\n        const haveClient = singleProductsLastMonth.some(product => product.parceiro === parceiro);\n        finalDate.setDate(1);\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) < finalDate.getTime();\n        if (!haveLastMonth && matchTime) {\n          singleProductsLastMonth.push(product);\n        }\n        if (!haveClient && matchTime) {\n          clientsLastMonth.push(parceiro);\n        }\n      });\n      setClients(() => ({\n        thisMonth: clients,\n        lastMonth: clientsLastMonth,\n        diff: (clients.length - clientsLastMonth.length) / clientsLastMonth.length * 100\n      }));\n      setSingleProducts(() => ({\n        thisMonth: singleProducts,\n        lastMonth: singleProductsLastMonth,\n        diff: (singleProducts.length - singleProductsLastMonth.length) / singleProductsLastMonth.length * 100\n      }));\n    }\n    const imports = products.filter(product => {\n      return new Date(product.updated_at).toLocaleDateString() === today.toLocaleDateString();\n    });\n    setImportsToday(imports);\n  }\n  function getBarChartInfos(initialDate, finalDate) {\n    let result = [];\n    let filteredProducts = [];\n    // const data = [];\n\n    let currentDate = new Date(initialDate);\n    while (currentDate <= finalDate) {\n      const month = String(currentDate.getMonth() + 1).padStart(2, '0');\n      const year = currentDate.getFullYear();\n      const dateString = `${month}/${year}`;\n      const dateValue = new Date(currentDate);\n      result.push({\n        dateString,\n        dateValue\n      });\n      currentDate.setMonth(currentDate.getMonth() + 1);\n    }\n    finalDate.setMonth(finalDate.getMonth() + 1);\n    finalDate.setDate(finalDate.getDate() - 1);\n    const filtered = result.map(month => {\n      filteredProducts = products.filter(product => {\n        const date = new Date(product.created_at).getTime();\n        let finalMonth = new Date(month.dateValue);\n        finalMonth.setMonth(month.dateValue.getMonth() + 1);\n        if (category === 'Categoria') {\n          return date >= month.dateValue.getTime() && date < finalMonth.getTime();\n        } else {\n          return category === product.categoria && date >= month.dateValue.getTime() && date < finalMonth.getTime();\n        }\n      });\n      return {\n        month,\n        array: filteredProducts\n      };\n    });\n    const data = filtered.map(element => {\n      let entry = 0;\n      let exit = 0;\n      element.array.forEach(product => {\n        entry = entry + parseInt(product.qtd_ult_compra);\n        exit = exit + parseInt(product.qtd_ult_saida);\n      });\n      return [element.month.dateString, entry, exit];\n    });\n    setBarChartData([['', 'Última Entrada (un)', 'Última Saída (un)'], ...data]);\n  }\n  function getPieChartInfos(initialDate, finalDate) {\n    const data = partners.map(partner => {\n      let total = 0;\n      const productsPartner = products.filter(product => {\n        const date = new Date(product.created_at).getTime();\n        if (initialDate && finalDate) {\n          if (category === 'Categoria') {\n            return product.parceiro === partner && date >= initialDate.getTime() && date <= finalDate.getTime();\n          } else {\n            return category === product.categoria && product.parceiro === partner && date >= initialDate.getTime() && date <= finalDate.getTime();\n          }\n        } else {\n          return product.parceiro === partner;\n        }\n      });\n      productsPartner.forEach(product => {\n        if (product.qtd_ult_saida) {\n          total = total + parseInt(product.qtd_ult_saida);\n        }\n      });\n      return [partner, total];\n    });\n    setPieChartData([['Parceiro', 'Entradas'], ...data]);\n  }\n  function handleSearch() {\n    setSelectedProduct(() => products.find(product => product.descricao_produto === search));\n    const initialDateArray = initialFilter.split('/');\n    const finalDateArray = finalFilter.split('/');\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\n    finalDate.setMonth(finalDate.getMonth() + 1);\n    finalDate.setDate(finalDate.getDate() - 1);\n    getBarChartInfos(initialDate, finalDate);\n  }\n  function getMetrics(initialDate, finalDate) {\n    const metrics = partners.map(partner => {\n      const filtered = products.filter(product => {\n        const {\n          categoria,\n          created_at,\n          updated_at,\n          parceiro\n        } = product;\n        const created = new Date(created_at).getTime();\n        const updated = new Date(updated_at).getTime();\n        const match = updated || created;\n        if (category === 'Categoria') {\n          return partner === parceiro && match >= initialDate.getTime() && match <= finalDate.getTime();\n        } else {\n          return category === categoria && partner === parceiro && match >= initialDate.getTime() && match <= finalDate.getTime();\n        }\n      });\n      let result = [partner];\n      let stock = 0;\n      let amountLastExit = 0;\n      let amountEntry = 0;\n      filtered.forEach(product => {\n        const {\n          qtd_ult_compra,\n          qtd_ult_saida,\n          estq_disponivel\n        } = product;\n        if (estq_disponivel) {\n          stock = stock + Math.trunc(Number(estq_disponivel));\n        }\n        if (qtd_ult_compra) {\n          amountEntry = amountEntry + Math.trunc(Number(qtd_ult_compra));\n        }\n        if (qtd_ult_saida) {\n          amountLastExit = amountLastExit + Math.trunc(Number(qtd_ult_saida));\n        }\n      });\n      result.push(stock + ' un.', amountEntry + ' un.', amountLastExit + ' un.');\n      return result;\n    });\n    setMetricsBody(metrics);\n  }\n  useEffect(() => {\n    setDates(() => {\n      let months = [];\n      months.push(`${(today.getMonth() + 1).toString().padStart(2, '0')}/${today.getFullYear()}`);\n      for (let i = 1; i <= 4; i++) {\n        const pastData = new Date();\n        pastData.setMonth(today.getMonth() - i);\n        months.push(`${(pastData.getMonth() + 1).toString().padStart(2, '0')}/${pastData.getFullYear()}`);\n      }\n      setInitialFilter(months[4]);\n      setFinalFilter(months[0]);\n      return months;\n    });\n    // getPieChartInfos();\n    // getCardsInfos();\n    // getBarChartInfos();\n  }, []);\n  useEffect(() => {\n    const initialDateArray = initialFilter.split('/');\n    const finalDateArray = finalFilter.split('/');\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\n    finalDate.setMonth(finalDate.getMonth() + 1);\n    finalDate.setDate(finalDate.getDate() - 1);\n    getPieChartInfos(initialDate, finalDate);\n    getCardsInfos(initialDate, finalDate);\n    getBarChartInfos(initialDate, finalDate);\n    getMetrics(initialDate, finalDate);\n  }, [initialFilter, finalFilter, category]);\n  useEffect(() => {\n    selectedProduct && setSelectedProduct(null);\n    setSearchResult(() => search ? products.filter(product => product.descricao_produto.includes(search.toUpperCase())) : []);\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(DashboardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Ol\\xE1, \", session.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Bem vindo(a) de volta!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatar,\n        alt: session.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DashboardFilterArea, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Per\\xEDodo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: initialFilter,\n            onChange: e => setInitialFilter(e.target.value),\n            children: dates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: date,\n              children: date\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 34\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: finalFilter,\n            onChange: e => setFinalFilter(e.target.value),\n            children: dates.map(date => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: date,\n              children: date\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 34\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardsArea, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => setCategory(e.target.value),\n            value: category,\n            children: categoriesOptions.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category,\n              children: category\n            }, category, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartsRow, {\n          children: /*#__PURE__*/_jsxDEV(BarCharts, {\n            data: barChartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PieChart, {\n          data: pieChartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardRow\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Clientes Novos\",\n            value: clients.thisMonth.length + ` clientes`,\n            gains: clients.diff.toFixed(2),\n            detail: clients.lastMonth.length + \" clientes - último mês\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Total Geral de \",\n          value: imports.thisMonth.length + \" un.\",\n          gains: imports.diff.toFixed(2),\n          detail: imports.lastMonth.length + \" un. - último mês\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Total Geral de Pedidos \\xDAnicos\",\n          value: singleProducts.thisMonth.length + \" un.\",\n          gains: singleProducts.diff.toFixed(2),\n          detail: singleProducts.lastMonth.length + \" un - último mês\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Pedidos Realizadas Hoje\",\n          value: importsToday.length + \" unidades\",\n          noComparison: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filterProducts\",\n          children: [/*#__PURE__*/_jsxDEV(InputWithIcon, {\n            placeholder: \"Filtre por pedido\",\n            setValue: setSearch,\n            value: search,\n            onEnter: handleSearch,\n            right: {\n              src: SearchIcon,\n              onClick: handleSearch\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), searchResult.length > 0 && !selectedProduct && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"searchResult\",\n            children: searchResult.map((product, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => setSearch(product.descricao_produto),\n              children: product.descricao_produto\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), selectedProduct && /*#__PURE__*/_jsxDEV(DefaultDashboardContainer, {\n          title: \"Resumo do Pedido\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedProduct.descricao_produto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Parceiro: \", selectedProduct.parceiro]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Categoria: \", selectedProduct.categoria]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Exportador: \", selectedProduct.exportador]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Data Entrada: \", selectedProduct.dta_ult_compra && new Date(selectedProduct.dta_ult_compra).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Data Sa\\xEDda: \", selectedProduct.dta_ult_saida && new Date(selectedProduct.dta_ult_saida).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Pre\\xE7o Entrada: R$\", selectedProduct.custo_ult_compra_cd.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"Pre\\xE7o Sa\\xEDda: R$\", selectedProduct.preco_vda_alvim.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MetricProducts, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: category === 'Categoria' ? 'Métricas' : `Métricas da categoria: ${category}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: metricsHeader.map((th, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                className: index > 1 ? 'center' : '',\n                children: th\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 17\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: metricsBody.map((tr, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: tr.map((td, tdIndex) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                className: tdIndex > 1 ? 'center' : '',\n                children: td\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this)\n            }, tdIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"SGGooAMet7Bmw+aptRyPxggUrhg=\");\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useEffect","useState","CardsArea","ChartsRow","DashboardFilterArea","DashboardHeader","DashboardWrapper","MetricProducts","GlobalContext","Card","InputWithIcon","DefaultDashboardContainer","BarCharts","PieChart","SearchIcon","Dashboard","user","session","products","partners","categories","today","Date","importsToday","setImportsToday","category","setCategory","imports","setImports","thisMonth","lastMonth","diff","lastMonthDate","singleProducts","setSingleProducts","clients","setClients","pieChartData","setPieChartData","barChartData","setBarChartData","dates","setDates","initialFilter","setInitialFilter","finalFilter","setFinalFilter","search","setSearch","searchResult","setSearchResult","selectedProduct","setSelectedProduct","metricsHeader","categoriesOptions","metricsBody","setMetricsBody","getCardsInfos","initialDate","finalDate","singleProductsLastMonth","clientsLastMonth","importedProducts","importedProductsLastMonth","firstDayMonth","setDate","productsLastMonth","filter","product","created_at","getTime","created","updated","updated_at","match","length","setMonth","getMonth","getDate","forEach","codigo_acesso_principal","parceiro","haveGeneral","some","haveClient","matchTime","push","haveLastMonth","toLocaleDateString","getBarChartInfos","result","filteredProducts","currentDate","month","String","padStart","year","getFullYear","dateString","dateValue","filtered","map","date","finalMonth","categoria","array","data","element","entry","exit","parseInt","qtd_ult_compra","qtd_ult_saida","getPieChartInfos","partner","total","productsPartner","handleSearch","find","descricao_produto","initialDateArray","split","finalDateArray","getMetrics","metrics","stock","amountLastExit","amountEntry","estq_disponivel","Math","trunc","Number","months","toString","i","pastData","includes","toUpperCase","name","avatar","e","target","value","toFixed","src","onClick","index","exportador","dta_ult_compra","dta_ult_saida","custo_ult_compra_cd","preco_vda_alvim","th","tr","td","tdIndex"],"sources":["C:/Users/Rox/Documents/GitHub/gpt-test-steticLay/src/pages/Dashboard/index.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  CardsArea,\r\n  ChartsRow,\r\n  DashboardFilterArea,\r\n  DashboardHeader,\r\n  DashboardWrapper,\r\n  MetricProducts\r\n} from \"./styles\";\r\n\r\nimport { GlobalContext } from '../../contexts/global';\r\n\r\nimport Card from './components/Card';\r\nimport InputWithIcon from '../../components/InputWithIcon';\r\nimport DefaultDashboardContainer from \"./components/DefaultDashboardContainer\";\r\nimport BarCharts from \"./components/BarChart\";\r\nimport PieChart from \"./components/PieChart\";\r\n\r\nimport SearchIcon from '../../assets/icons/search.png';\r\n\r\nexport default function Dashboard() {\r\n  const { user, session, products, partners, categories } = useContext(GlobalContext);\r\n  const today = new Date();\r\n  const [importsToday, setImportsToday] = useState([]);\r\n  const [category, setCategory] = useState('Categoria');\r\n  const [imports, setImports] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0,\r\n    lastMonthDate: ''\r\n  });\r\n  const [singleProducts, setSingleProducts] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0\r\n  });\r\n  const [clients, setClients] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0\r\n  })\r\n  const [pieChartData, setPieChartData] = useState([\r\n    [\"Procedimentos\", \"Vendas\"],\r\n    [\"Eletroterapia\", 0],\r\n    [\"Peelings \", 0,],\r\n    [\"Carboxiterapia\", 0],\r\n  ]);\r\n  const [barChartData, setBarChartData] = useState([\r\n    ['', 'Última Entrada (un)', 'Última Saída (un)'],\r\n    ['Set', 0, 0],\r\n    ['Out', 0, 0],\r\n    ['Nov', 0, 0],\r\n    ['Dez', 0, 0],\r\n    ['Jan', 0, 0],\r\n    ['Fev', 0, 0],\r\n  ])\r\n  const [dates, setDates] = useState([]);\r\n  const [initialFilter, setInitialFilter] = useState('');\r\n  const [finalFilter, setFinalFilter] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const metricsHeader = ['Procedimento',  'Qtd. Últ-Entrada', 'Qtd. Últ-Saída'];\r\n  const categoriesOptions = ['Categoria', ...categories]\r\n\r\n  const [metricsBody, setMetricsBody] = useState([]);\r\n\r\n  function getCardsInfos(initialDate, finalDate) {\r\n    let singleProducts = [];\r\n    let singleProductsLastMonth = [];\r\n    let clients = [];\r\n    let clientsLastMonth = [];\r\n    let importedProducts = [];\r\n    let importedProductsLastMonth = [];\r\n    const firstDayMonth = new Date().setDate(1);\r\n    let productsLastMonth = products.filter(product =>\r\n      new Date(product.created_at).getTime() < firstDayMonth\r\n    );\r\n\r\n    if (initialDate && finalDate) {\r\n      importedProducts = products.filter(product => {\r\n        const created = new Date(product.created_at).getTime();\r\n        const updated = new Date(product.updated_at).getTime();\r\n        const match = updated || created\r\n        return (\r\n          match >= initialDate.getTime() &&\r\n          match <= finalDate.getTime()\r\n        )\r\n      });\r\n\r\n      importedProductsLastMonth = products.filter(product => {\r\n        const created = new Date(product.created_at).getTime();\r\n        const updated = new Date(product.updated_at).getTime();\r\n        const match = updated || created\r\n        finalDate.setDate(1);\r\n        return (\r\n          match >= initialDate.getTime() &&\r\n          match < finalDate.getTime()\r\n        )\r\n      });\r\n\r\n      setImports(() => ({\r\n        thisMonth: importedProducts,\r\n        lastMonth: importedProductsLastMonth,\r\n        diff: (importedProducts.length - importedProductsLastMonth.length) / importedProductsLastMonth.length * 100\r\n      }));\r\n\r\n\r\n      finalDate.setMonth(finalDate.getMonth() + 1);\r\n      finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n      products.forEach(product => {\r\n        const { codigo_acesso_principal, parceiro, created_at } = product;\r\n\r\n        const haveGeneral = singleProducts.some(product =>\r\n          product.codigo_acesso_principal === codigo_acesso_principal\r\n        );\r\n        const haveClient = singleProducts.some(product =>\r\n          product.parceiro === parceiro\r\n        );\r\n\r\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) <= finalDate.getTime();\r\n        if (!haveGeneral && matchTime) {\r\n          singleProducts.push(product);\r\n        } else {\r\n        }\r\n        if (!haveClient && matchTime) {\r\n          clients.push(parceiro);\r\n        }\r\n      });\r\n\r\n      productsLastMonth.forEach(product => {\r\n        const { codigo_acesso_principal, parceiro, created_at } = product;\r\n        const haveLastMonth = singleProductsLastMonth.some(product =>\r\n          product.codigo_acesso_principal === codigo_acesso_principal\r\n        );\r\n        const haveClient = singleProductsLastMonth.some(product =>\r\n          product.parceiro === parceiro\r\n        );\r\n        finalDate.setDate(1);\r\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) < finalDate.getTime();\r\n        if (!haveLastMonth && matchTime) {\r\n          singleProductsLastMonth.push(product);\r\n        }\r\n        if (!haveClient && matchTime) {\r\n          clientsLastMonth.push(parceiro);\r\n        }\r\n      });\r\n\r\n      setClients(() => ({\r\n        thisMonth: clients,\r\n        lastMonth: clientsLastMonth,\r\n        diff: (clients.length - clientsLastMonth.length) / clientsLastMonth.length * 100\r\n      }));\r\n\r\n      setSingleProducts(() => ({\r\n        thisMonth: singleProducts,\r\n        lastMonth: singleProductsLastMonth,\r\n        diff: (singleProducts.length - singleProductsLastMonth.length) / singleProductsLastMonth.length * 100\r\n      }));\r\n    }\r\n\r\n    const imports = products.filter(product => {\r\n      return new Date(product.updated_at).toLocaleDateString() === today.toLocaleDateString();\r\n    });\r\n    setImportsToday(imports);\r\n  }\r\n\r\n  function getBarChartInfos(initialDate, finalDate) {\r\n    let result = [];\r\n    let filteredProducts = [];\r\n    // const data = [];\r\n\r\n    let currentDate = new Date(initialDate);\r\n    while (currentDate <= finalDate) {\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n      const year = currentDate.getFullYear();\r\n      const dateString = `${month}/${year}`;\r\n      const dateValue = new Date(currentDate);\r\n      result.push({ dateString, dateValue });\r\n      currentDate.setMonth(currentDate.getMonth() + 1);\r\n    }\r\n\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    const filtered = result.map(month => {\r\n      filteredProducts = products.filter(product => {\r\n        const date = new Date(product.created_at).getTime();\r\n        let finalMonth = new Date(month.dateValue);\r\n        finalMonth.setMonth(month.dateValue.getMonth() + 1);\r\n\r\n        if (category === 'Categoria') {\r\n          return (\r\n            date >= month.dateValue.getTime() &&\r\n            date < finalMonth.getTime()\r\n          )\r\n        } else {\r\n          return (\r\n            category === product.categoria &&\r\n            date >= month.dateValue.getTime() &&\r\n            date < finalMonth.getTime()\r\n          )\r\n        }\r\n      });\r\n      return ({\r\n        month,\r\n        array: filteredProducts,\r\n      })\r\n    })\r\n    const data = filtered.map(element => {\r\n      let entry = 0;\r\n      let exit = 0;\r\n      element.array.forEach(product => {\r\n        entry = entry + parseInt(product.qtd_ult_compra);\r\n        exit = exit + parseInt(product.qtd_ult_saida);\r\n      })\r\n      return ([\r\n        element.month.dateString,\r\n        entry,\r\n        exit,\r\n      ]\r\n      )\r\n    })\r\n    setBarChartData([\r\n      ['', 'Última Entrada (un)', 'Última Saída (un)'],\r\n      ...data\r\n    ])\r\n  }\r\n\r\n  function getPieChartInfos(initialDate, finalDate) {\r\n    const data = partners.map(partner => {\r\n      let total = 0;\r\n      const productsPartner = products.filter(product => {\r\n        const date = new Date(product.created_at).getTime();\r\n        if (initialDate && finalDate) {\r\n          if (category === 'Categoria') {\r\n            return (\r\n              product.parceiro === partner &&\r\n              date >= initialDate.getTime() &&\r\n              date <= finalDate.getTime()\r\n            )\r\n          } else {\r\n            return (\r\n              category === product.categoria &&\r\n              product.parceiro === partner &&\r\n              date >= initialDate.getTime() &&\r\n              date <= finalDate.getTime()\r\n            )\r\n          }\r\n\r\n        } else {\r\n          return product.parceiro === partner\r\n        }\r\n      });\r\n      productsPartner.forEach(product => {\r\n        if (product.qtd_ult_saida) {\r\n          total = total + parseInt(product.qtd_ult_saida);\r\n        }\r\n      });\r\n      return [partner, total]\r\n    })\r\n    setPieChartData([\r\n      ['Parceiro', 'Entradas'],\r\n      ...data\r\n    ])\r\n  }\r\n\r\n  function handleSearch() {\r\n    setSelectedProduct(() =>\r\n      products.find(product => product.descricao_produto === search)\r\n    );\r\n    const initialDateArray = initialFilter.split('/');\r\n    const finalDateArray = finalFilter.split('/');\r\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\r\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    getBarChartInfos(initialDate, finalDate);\r\n  }\r\n\r\n  function getMetrics(initialDate, finalDate) {\r\n    const metrics = partners.map(partner => {\r\n      const filtered = products.filter(product => {\r\n        const { categoria, created_at, updated_at, parceiro } = product;\r\n        const created = new Date(created_at).getTime();\r\n        const updated = new Date(updated_at).getTime();\r\n        const match = updated || created\r\n        if (category === 'Categoria') {\r\n          return (\r\n            partner === parceiro &&\r\n            match >= initialDate.getTime() &&\r\n            match <= finalDate.getTime()\r\n          )\r\n        } else {\r\n          return (\r\n            category === categoria &&\r\n            partner === parceiro &&\r\n            match >= initialDate.getTime() &&\r\n            match <= finalDate.getTime()\r\n          )\r\n        }\r\n      })\r\n      let result = [partner];\r\n      let stock = 0;\r\n      let amountLastExit = 0;\r\n      let amountEntry = 0;\r\n      filtered.forEach(product => {\r\n        const { qtd_ult_compra, qtd_ult_saida, estq_disponivel } = product;\r\n        if (estq_disponivel) {\r\n          stock = stock + Math.trunc(Number(estq_disponivel));\r\n        }\r\n        if (qtd_ult_compra) {\r\n          amountEntry = amountEntry + Math.trunc(Number(qtd_ult_compra));\r\n        }\r\n        if (qtd_ult_saida) {\r\n          amountLastExit = amountLastExit + Math.trunc(Number(qtd_ult_saida));\r\n        }\r\n      })\r\n      result.push(stock + ' un.', amountEntry + ' un.', amountLastExit + ' un.');\r\n      return result\r\n    });\r\n    setMetricsBody(metrics);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDates(() => {\r\n      let months = [];\r\n      months.push(`${(today.getMonth() + 1).toString().padStart(2, '0')}/${today.getFullYear()}`);\r\n      for (let i = 1; i <= 4; i++) {\r\n        const pastData = new Date();\r\n        pastData.setMonth(today.getMonth() - i);\r\n        months.push(`${(pastData.getMonth() + 1).toString().padStart(2, '0')}/${pastData.getFullYear()}`);\r\n      }\r\n      setInitialFilter(months[4]);\r\n      setFinalFilter(months[0]);\r\n      return months;\r\n    })\r\n    // getPieChartInfos();\r\n    // getCardsInfos();\r\n    // getBarChartInfos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const initialDateArray = initialFilter.split('/');\r\n    const finalDateArray = finalFilter.split('/');\r\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\r\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    getPieChartInfos(initialDate, finalDate);\r\n    getCardsInfos(initialDate, finalDate);\r\n    getBarChartInfos(initialDate, finalDate);\r\n    getMetrics(initialDate, finalDate);\r\n  }, [initialFilter, finalFilter, category]);\r\n\r\n  useEffect(() => {\r\n    selectedProduct && setSelectedProduct(null);\r\n    setSearchResult(() =>\r\n      search\r\n        ? products.filter(product => product.descricao_produto.includes(search.toUpperCase()))\r\n        : []\r\n    )\r\n  }, [search]);\r\n\r\n  return (\r\n    <DashboardWrapper>\r\n      <DashboardHeader>\r\n        <div>\r\n          <h1>Olá, {session.name} </h1>\r\n          <small>Bem vindo(a) de volta!</small>\r\n        </div>\r\n        <img src={user.avatar} alt={session.name} />\r\n      </DashboardHeader>\r\n\r\n      <DashboardFilterArea>\r\n        <div>\r\n          <label>Período:</label>\r\n          <div>\r\n            <select value={initialFilter} onChange={(e) => setInitialFilter(e.target.value)}>\r\n              {dates.map(date => <option key={date} value={date}>{date}</option>)}\r\n            </select>\r\n\r\n            <span />\r\n\r\n            <select value={finalFilter} onChange={(e) => setFinalFilter(e.target.value)}>\r\n              {dates.map(date => <option key={date} value={date}>{date}</option>)}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n      </DashboardFilterArea>\r\n\r\n      <CardsArea>\r\n        <div className=\"cards\">\r\n          <div>\r\n            <select\r\n              onChange={e => setCategory(e.target.value)}\r\n              value={category}\r\n            >\r\n              {categoriesOptions.map(category =>\r\n                <option value={category} key={category}>{category}</option>)}\r\n            </select>\r\n          </div>\r\n\r\n          <ChartsRow>\r\n            <BarCharts data={barChartData} />\r\n          </ChartsRow>\r\n\r\n          <PieChart data={pieChartData} />\r\n\r\n          <div className=\"cardRow\" >\r\n            <Card\r\n              title=\"Clientes Novos\"\r\n              value={clients.thisMonth.length + ` clientes`} gains={clients.diff.toFixed(2)}\r\n              detail={clients.lastMonth.length + \" clientes - último mês\"}\r\n            />\r\n          </div>\r\n\r\n          <Card\r\n            title=\"Total Geral de \"\r\n            value={imports.thisMonth.length + \" un.\"} gains={imports.diff.toFixed(2)}\r\n            detail={imports.lastMonth.length + \" un. - último mês\"}\r\n          />\r\n\r\n          <Card\r\n            title=\"Total Geral de Pedidos Únicos\"\r\n            value={singleProducts.thisMonth.length + \" un.\"} gains={singleProducts.diff.toFixed(2)}\r\n            detail={singleProducts.lastMonth.length + \" un - último mês\"}\r\n          />\r\n\r\n          <Card title=\"Pedidos Realizadas Hoje\" value={importsToday.length + \" unidades\"} noComparison />\r\n          <div className=\"filterProducts\">\r\n            <InputWithIcon\r\n              placeholder=\"Filtre por pedido\"\r\n              setValue={setSearch}\r\n              value={search}\r\n              onEnter={handleSearch}\r\n              right={{ src: SearchIcon, onClick: handleSearch }}\r\n            />\r\n            {searchResult.length > 0 && !selectedProduct &&\r\n              <div className=\"searchResult\">\r\n                {searchResult.map((product, index) =>\r\n                  <span key={index} onClick={() => setSearch(product.descricao_produto)}>\r\n                    {product.descricao_produto}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            }\r\n          </div>\r\n\r\n          {selectedProduct &&\r\n            <DefaultDashboardContainer title=\"Resumo do Pedido\">\r\n              <h3>{selectedProduct.descricao_produto}</h3>\r\n              <ul>\r\n                <li>Parceiro: {selectedProduct.parceiro}</li>\r\n                <li>Categoria: {selectedProduct.categoria}</li>\r\n                <li>Exportador: {selectedProduct.exportador}</li>\r\n                <span />\r\n\r\n                <li>Data Entrada: {selectedProduct.dta_ult_compra && new Date(selectedProduct.dta_ult_compra).toLocaleDateString()}</li>\r\n                <li>Data Saída: {selectedProduct.dta_ult_saida && new Date(selectedProduct.dta_ult_saida).toLocaleDateString()}</li>\r\n                <span />\r\n\r\n                <li>Preço Entrada: R${selectedProduct.custo_ult_compra_cd.toFixed(2)}</li>\r\n                <li>Preço Saída: R${selectedProduct.preco_vda_alvim.toFixed(2)}</li>\r\n              </ul>\r\n            </DefaultDashboardContainer>\r\n          }\r\n        </div>\r\n\r\n      </CardsArea>\r\n\r\n      <MetricProducts>\r\n        <h2>{category === 'Categoria' ? 'Métricas' : `Métricas da categoria: ${category}`}</h2>\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>{metricsHeader.map((th, index) =>\r\n              <React.Fragment key={index}>\r\n                <th className={index > 1 ? 'center' : ''}>{th}</th>\r\n              </React.Fragment>\r\n            )}</tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {metricsBody.map((tr, index) =>\r\n              <tr key={index}>\r\n                {tr.map((td, tdIndex) =>\r\n                  <React.Fragment key={tdIndex}>\r\n                    <td className={tdIndex > 1 ? 'center' : ''}>{td}</td>\r\n                  </React.Fragment>\r\n                )}\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </MetricProducts>\r\n    </DashboardWrapper>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}