[{"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\index.js":"1","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\App.js":"2","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\styles\\globalStyles.js":"3","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\routes.js":"4","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\contexts\\global.js":"5","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Login\\index.js":"6","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\FirstAccess\\index.js":"7","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\index.js":"8","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\index.js":"9","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Users\\index.js":"10","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\ForgotPassword\\index.js":"11","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Notifications\\index.js":"12","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Menu\\index.js":"13","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Login\\styles.js":"14","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\styles.js":"15","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\styles.js":"16","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\Card.js":"17","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\BarChart.js":"18","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\PieChart.js":"19","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\DefaultDashboardContainer.js":"20","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\services\\api.js":"21","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Users\\styles.js":"22","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\Pagination.js":"23","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Notifications\\styles.js":"24","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\ForgotPassword\\styles.js":"25","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Menu\\styles.js":"26","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\utils\\toast.js":"27","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Button\\index.js":"28","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Loading\\index.js":"29","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\InputWithIcon\\index.js":"30","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Modal\\index.js":"31","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\PageContainer\\index.js":"32","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Button\\styles.js":"33","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\InputWithIcon\\styles.js":"34","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Modal\\styles.js":"35","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\PageContainer\\styles.js":"36"},{"size":323,"mtime":1684442890528,"results":"37","hashOfConfig":"38"},{"size":249,"mtime":1684442890497,"results":"39","hashOfConfig":"38"},{"size":1412,"mtime":1684445174437,"results":"40","hashOfConfig":"38"},{"size":1189,"mtime":1684442890548,"results":"41","hashOfConfig":"38"},{"size":1648,"mtime":1684442890527,"results":"42","hashOfConfig":"38"},{"size":4191,"mtime":1684444974805,"results":"43","hashOfConfig":"38"},{"size":3355,"mtime":1684444894110,"results":"44","hashOfConfig":"38"},{"size":12868,"mtime":1684442890545,"results":"45","hashOfConfig":"38"},{"size":13283,"mtime":1684465064409,"results":"46","hashOfConfig":"38"},{"size":9246,"mtime":1684464755725,"results":"47","hashOfConfig":"38"},{"size":2220,"mtime":1684442890537,"results":"48","hashOfConfig":"38"},{"size":3439,"mtime":1684442890541,"results":"49","hashOfConfig":"38"},{"size":7264,"mtime":1684465855049,"results":"50","hashOfConfig":"38"},{"size":1828,"mtime":1684442890539,"results":"51","hashOfConfig":"38"},{"size":6689,"mtime":1684442890546,"results":"52","hashOfConfig":"38"},{"size":5672,"mtime":1684442890534,"results":"53","hashOfConfig":"38"},{"size":773,"mtime":1684442890532,"results":"54","hashOfConfig":"38"},{"size":734,"mtime":1684445174521,"results":"55","hashOfConfig":"38"},{"size":1198,"mtime":1684445174437,"results":"56","hashOfConfig":"38"},{"size":462,"mtime":1684442890532,"results":"57","hashOfConfig":"38"},{"size":2026,"mtime":1684464200588,"results":"58","hashOfConfig":"38"},{"size":5476,"mtime":1684442890548,"results":"59","hashOfConfig":"38"},{"size":1633,"mtime":1684442890542,"results":"60","hashOfConfig":"38"},{"size":2968,"mtime":1684442890541,"results":"61","hashOfConfig":"38"},{"size":1396,"mtime":1684442890538,"results":"62","hashOfConfig":"38"},{"size":3350,"mtime":1684442890523,"results":"63","hashOfConfig":"38"},{"size":417,"mtime":1684442890550,"results":"64","hashOfConfig":"38"},{"size":202,"mtime":1684442890518,"results":"65","hashOfConfig":"38"},{"size":211,"mtime":1684445174521,"results":"66","hashOfConfig":"38"},{"size":844,"mtime":1684442890520,"results":"67","hashOfConfig":"38"},{"size":829,"mtime":1684442890524,"results":"68","hashOfConfig":"38"},{"size":341,"mtime":1684442890525,"results":"69","hashOfConfig":"38"},{"size":350,"mtime":1684442890519,"results":"70","hashOfConfig":"38"},{"size":869,"mtime":1684442890520,"results":"71","hashOfConfig":"38"},{"size":266,"mtime":1684442890525,"results":"72","hashOfConfig":"38"},{"size":772,"mtime":1684445174521,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"lmmmp1",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"77"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"77"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\index.js",[],[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\App.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\styles\\globalStyles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\routes.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\contexts\\global.js",["187"],[],"import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const GlobalContext = createContext({});\r\n\r\nexport default function GlobalProvider({ children }) {\r\n  const [user, setUser] = useState({\r\n    name: \"Domazzi\", avatar: \"https://www.w3schools.com/howto/img_avatar.png\"\r\n  });\r\n  const [notifications, setNotifications] = useState([\r\n    {title: 'Um novo relatório mensal está pronto para download!', description: 'O relatório mensal de Operações está pronto para visualização e Download. Verifique todos os dados presentes no relatório.', type: 'description', date: '06/02/2023',\r\n      file: {title: 'Relatório teste.pdf', type: 'pdf'}    \r\n    },\r\n    {title: 'Um novo relatório financeiro está disponível para visualização!', description: 'Em breve!', type: 'payments', date: '06/02/2023'},\r\n    {title: 'Notamos gastos anormalmente altos no mês de Fevereiro.', description: 'Em breve!', type: 'warning', date: '06/02/2023'},\r\n  ]);\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [partners, setPartners] = useState([]);\r\n  const [session, setSession] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      user, setUser, \r\n      users, setUsers,\r\n      notifications, setNotifications,\r\n      products, setProducts,\r\n      categories, setCategories,\r\n      partners, setPartners,\r\n      session, setSession,\r\n      filteredProducts, setFilteredProducts\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Login\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\FirstAccess\\index.js",["188","189"],[],"import { useContext, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport Logo from '../../assets/logo.png';\r\nimport LogoMobile from '../../assets/logoMobile.png';\r\nimport VisibilityIcon from '../../assets/icons/visibility.png';\r\nimport VisibilityOffIcon from '../../assets/icons/visibility_off.png';\r\nimport LockIcon from '../../assets/icons/lock.png';\r\nimport InputWithIcon from \"../../components/InputWithIcon\";\r\nimport Button from \"../../components/Button\";\r\nimport { GlobalContext } from '../../contexts/global';\r\nimport Loading from \"../../components/Loading\";\r\nimport { LoginLeftWrapper, LoginRightWrapper } from \"../Login/styles\";\r\nimport { firstAccess } from \"../../services/api\";\r\n\r\nexport default function FirstAccess() {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const { setSession, session } = useContext(GlobalContext);\r\n  const navigate = useNavigate();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!newPassword || !confirmPassword) {\r\n      setError('Preencha os campos!');\r\n    } else if (newPassword !== confirmPassword) {\r\n      setError('Verifique as senhas digitas!');\r\n    } else {\r\n      setIsLoading(true);\r\n\r\n      firstAccess(session, newPassword)\r\n        .then(() => {\r\n          navigate('/assistente-virtual');\r\n        }).catch((err) => {\r\n          setError('Falha ao atualizar senha!');\r\n          console.log(err);\r\n\r\n          setIsLoading(false);\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LoginLeftWrapper>\r\n        <img src={Logo} alt=\"CD2 GPT Super\" />\r\n        <h2>Bem vindo(a) ao <br /> Esteticista Virtual Laissa Pacheco.</h2>\r\n      </LoginLeftWrapper>\r\n\r\n      <LoginRightWrapper>\r\n        <img src={LogoMobile} alt=\"CD2 GPT Super\" />\r\n        <h2>Este é seu primeiro <br /> acesso na aplicação.</h2>\r\n        <p>Crie uma nova senha para entrar.</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <InputWithIcon\r\n            label=\"Nova Senha\" placeholder=\"Insira a nova senha\"\r\n            value={newPassword} setValue={setNewPassword}\r\n            left={{ src: LockIcon }}\r\n            right={{\r\n              src: showNewPassword ? VisibilityOffIcon : VisibilityIcon,\r\n              onClick: () => setShowNewPassword(!showNewPassword)\r\n            }}\r\n            type={showNewPassword ? 'text' : 'password'}\r\n          />\r\n\r\n          <InputWithIcon\r\n            label=\"Confirmar Senha\" placeholder=\"Confirme a senha\"\r\n            value={confirmPassword} setValue={setConfirmPassword}\r\n            left={{ src: LockIcon, }}\r\n            right={{\r\n              src: showConfirmPassword ? VisibilityOffIcon : VisibilityIcon,\r\n              onClick: () => setShowConfirmPassword(!showConfirmPassword)\r\n            }}\r\n            type={showConfirmPassword ? 'text' : 'password'}\r\n          />\r\n\r\n          {error && <span className=\"error\">{error}</span>}\r\n\r\n          <Button color=\"branding\" text=\"Concluir\" />\r\n        </form>\r\n        <Loading isLoading={isLoading} />\r\n      </LoginRightWrapper>\r\n    </>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\index.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  CardsArea,\r\n  DashboardHeader,\r\n  DashboardWrapper,\r\n} from \"./styles\";\r\n\r\nimport { GlobalContext } from '../../contexts/global';\r\n\r\n\r\nexport default function Products() {\r\n  const { user, session, products, partners, categories } = useContext(GlobalContext);\r\n  const today = new Date();\r\n  const [importsToday, setImportsToday] = useState([]);\r\n  const [category, setCategory] = useState('Categoria');\r\n  const [imports, setImports] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0,\r\n    lastMonthDate: ''\r\n  });\r\n  const [singleProducts, setSingleProducts] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0\r\n  });\r\n  const [clients, setClients] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0\r\n  })\r\n  const [pieChartData, setPieChartData] = useState([\r\n    [\"Parceiro\", \"Vendas\"],\r\n    [\"Hippo\", 0],\r\n    [\"Zaffari\", 0,],\r\n    [\"Super pão\", 0],\r\n  ]);\r\n  const [barChartData, setBarChartData] = useState([\r\n    ['', 'Última Entrada (un)', 'Última Saída (un)'],\r\n    ['Set', 0, 0],\r\n    ['Out', 0, 0],\r\n    ['Nov', 0, 0],\r\n    ['Dez', 0, 0],\r\n    ['Jan', 0, 0],\r\n    ['Fev', 0, 0],\r\n  ])\r\n  const [dates, setDates] = useState([]);\r\n  const [initialFilter, setInitialFilter] = useState('');\r\n  const [finalFilter, setFinalFilter] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const metricsHeader = ['Parceiros', 'Estoque', 'Qtd. Últ-Entrada', 'Qtd. Últ-Saída'];\r\n  const categoriesOptions = ['Categoria', ...categories]\r\n\r\n  const [metricsBody, setMetricsBody] = useState([]);\r\n\r\n  function getCardsInfos(initialDate, finalDate) {\r\n    let singleProducts = [];\r\n    let singleProductsLastMonth = [];\r\n    let clients = [];\r\n    let clientsLastMonth = [];\r\n    let importedProducts = [];\r\n    let importedProductsLastMonth = [];\r\n    const firstDayMonth = new Date().setDate(1);\r\n    let productsLastMonth = products.filter(product =>\r\n      new Date(product.created_at).getTime() < firstDayMonth\r\n    );\r\n\r\n    if (initialDate && finalDate) {\r\n      importedProducts = products.filter(product => {\r\n        const created = new Date(product.created_at).getTime();\r\n        const updated = new Date(product.updated_at).getTime();\r\n        const match = updated || created\r\n        return (\r\n          match >= initialDate.getTime() &&\r\n          match <= finalDate.getTime()\r\n        )\r\n      });\r\n\r\n      importedProductsLastMonth = products.filter(product => {\r\n        const created = new Date(product.created_at).getTime();\r\n        const updated = new Date(product.updated_at).getTime();\r\n        const match = updated || created\r\n        finalDate.setDate(1);\r\n        return (\r\n          match >= initialDate.getTime() &&\r\n          match < finalDate.getTime()\r\n        )\r\n      });\r\n\r\n      setImports(() => ({\r\n        thisMonth: importedProducts,\r\n        lastMonth: importedProductsLastMonth,\r\n        diff: (importedProducts.length - importedProductsLastMonth.length) / importedProductsLastMonth.length * 100\r\n      }));\r\n\r\n\r\n      finalDate.setMonth(finalDate.getMonth() + 1);\r\n      finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n      products.forEach(product => {\r\n        const { codigo_acesso_principal, parceiro, created_at } = product;\r\n\r\n        const haveGeneral = singleProducts.some(product =>\r\n          product.codigo_acesso_principal === codigo_acesso_principal\r\n        );\r\n        const haveClient = singleProducts.some(product =>\r\n          product.parceiro === parceiro\r\n        );\r\n\r\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) <= finalDate.getTime();\r\n        if (!haveGeneral && matchTime) {\r\n          singleProducts.push(product);\r\n        } else {\r\n        }\r\n        if (!haveClient && matchTime) {\r\n          clients.push(parceiro);\r\n        }\r\n      });\r\n\r\n      productsLastMonth.forEach(product => {\r\n        const { codigo_acesso_principal, parceiro, created_at } = product;\r\n        const haveLastMonth = singleProductsLastMonth.some(product =>\r\n          product.codigo_acesso_principal === codigo_acesso_principal\r\n        );\r\n        const haveClient = singleProductsLastMonth.some(product =>\r\n          product.parceiro === parceiro\r\n        );\r\n        finalDate.setDate(1);\r\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) < finalDate.getTime();\r\n        if (!haveLastMonth && matchTime) {\r\n          singleProductsLastMonth.push(product);\r\n        }\r\n        if (!haveClient && matchTime) {\r\n          clientsLastMonth.push(parceiro);\r\n        }\r\n      });\r\n\r\n      setClients(() => ({\r\n        thisMonth: clients,\r\n        lastMonth: clientsLastMonth,\r\n        diff: (clients.length - clientsLastMonth.length) / clientsLastMonth.length * 100\r\n      }));\r\n\r\n      setSingleProducts(() => ({\r\n        thisMonth: singleProducts,\r\n        lastMonth: singleProductsLastMonth,\r\n        diff: (singleProducts.length - singleProductsLastMonth.length) / singleProductsLastMonth.length * 100\r\n      }));\r\n    }\r\n\r\n    const imports = products.filter(product => {\r\n      return new Date(product.updated_at).toLocaleDateString() === today.toLocaleDateString();\r\n    });\r\n    setImportsToday(imports);\r\n  }\r\n\r\n  function getBarChartInfos(initialDate, finalDate) {\r\n    let result = [];\r\n    let filteredProducts = [];\r\n    // const data = [];\r\n\r\n    let currentDate = new Date(initialDate);\r\n    while (currentDate <= finalDate) {\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n      const year = currentDate.getFullYear();\r\n      const dateString = `${month}/${year}`;\r\n      const dateValue = new Date(currentDate);\r\n      result.push({ dateString, dateValue });\r\n      currentDate.setMonth(currentDate.getMonth() + 1);\r\n    }\r\n\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    const filtered = result.map(month => {\r\n      filteredProducts = products.filter(product => {\r\n        const date = new Date(product.created_at).getTime();\r\n        let finalMonth = new Date(month.dateValue);\r\n        finalMonth.setMonth(month.dateValue.getMonth() + 1);\r\n\r\n        if (category === 'Categoria') {\r\n          return (\r\n            date >= month.dateValue.getTime() &&\r\n            date < finalMonth.getTime()\r\n          )\r\n        } else {\r\n          return (\r\n            category === product.categoria &&\r\n            date >= month.dateValue.getTime() &&\r\n            date < finalMonth.getTime()\r\n          )\r\n        }\r\n      });\r\n      return ({\r\n        month,\r\n        array: filteredProducts,\r\n      })\r\n    })\r\n    const data = filtered.map(element => {\r\n      let entry = 0;\r\n      let exit = 0;\r\n      element.array.forEach(product => {\r\n        entry = entry + parseInt(product.qtd_ult_compra);\r\n        exit = exit + parseInt(product.qtd_ult_saida);\r\n      })\r\n      return ([\r\n        element.month.dateString,\r\n        entry,\r\n        exit,\r\n      ]\r\n      )\r\n    })\r\n    setBarChartData([\r\n      ['', 'Última Entrada (un)', 'Última Saída (un)'],\r\n      ...data\r\n    ])\r\n  }\r\n\r\n  function getPieChartInfos(initialDate, finalDate) {\r\n    const data = partners.map(partner => {\r\n      let total = 0;\r\n      const productsPartner = products.filter(product => {\r\n        const date = new Date(product.created_at).getTime();\r\n        if (initialDate && finalDate) {\r\n          if (category === 'Categoria') {\r\n            return (\r\n              product.parceiro === partner &&\r\n              date >= initialDate.getTime() &&\r\n              date <= finalDate.getTime()\r\n            )\r\n          } else {\r\n            return (\r\n              category === product.categoria &&\r\n              product.parceiro === partner &&\r\n              date >= initialDate.getTime() &&\r\n              date <= finalDate.getTime()\r\n            )\r\n          }\r\n\r\n        } else {\r\n          return product.parceiro === partner\r\n        }\r\n      });\r\n      productsPartner.forEach(product => {\r\n        if (product.qtd_ult_saida) {\r\n          total = total + parseInt(product.qtd_ult_saida);\r\n        }\r\n      });\r\n      return [partner, total]\r\n    })\r\n    setPieChartData([\r\n      ['Parceiro', 'Entradas'],\r\n      ...data\r\n    ])\r\n  }\r\n\r\n  function handleSearch() {\r\n    setSelectedProduct(() =>\r\n      products.find(product => product.descricao_produto === search)\r\n    );\r\n    const initialDateArray = initialFilter.split('/');\r\n    const finalDateArray = finalFilter.split('/');\r\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\r\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    getBarChartInfos(initialDate, finalDate);\r\n  }\r\n\r\n  function getMetrics(initialDate, finalDate) {\r\n    const metrics = partners.map(partner => {\r\n      const filtered = products.filter(product => {\r\n        const { categoria, created_at, updated_at, parceiro } = product;\r\n        const created = new Date(created_at).getTime();\r\n        const updated = new Date(updated_at).getTime();\r\n        const match = updated || created\r\n        if (category === 'Categoria') {\r\n          return (\r\n            partner === parceiro &&\r\n            match >= initialDate.getTime() &&\r\n            match <= finalDate.getTime()\r\n          )\r\n        } else {\r\n          return (\r\n            category === categoria &&\r\n            partner === parceiro &&\r\n            match >= initialDate.getTime() &&\r\n            match <= finalDate.getTime()\r\n          )\r\n        }\r\n      })\r\n      let result = [partner];\r\n      let stock = 0;\r\n      let amountLastExit = 0;\r\n      let amountEntry = 0;\r\n      filtered.forEach(product => {\r\n        const { qtd_ult_compra, qtd_ult_saida, estq_disponivel } = product;\r\n        if (estq_disponivel) {\r\n          stock = stock + Math.trunc(Number(estq_disponivel));\r\n        }\r\n        if (qtd_ult_compra) {\r\n          amountEntry = amountEntry + Math.trunc(Number(qtd_ult_compra));\r\n        }\r\n        if (qtd_ult_saida) {\r\n          amountLastExit = amountLastExit + Math.trunc(Number(qtd_ult_saida));\r\n        }\r\n      })\r\n      result.push(stock + ' un.', amountEntry + ' un.', amountLastExit + ' un.');\r\n      return result\r\n    });\r\n    setMetricsBody(metrics);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDates(() => {\r\n      let months = [];\r\n      months.push(`${(today.getMonth() + 1).toString().padStart(2, '0')}/${today.getFullYear()}`);\r\n      for (let i = 1; i <= 4; i++) {\r\n        const pastData = new Date();\r\n        pastData.setMonth(today.getMonth() - i);\r\n        months.push(`${(pastData.getMonth() + 1).toString().padStart(2, '0')}/${pastData.getFullYear()}`);\r\n      }\r\n      setInitialFilter(months[4]);\r\n      setFinalFilter(months[0]);\r\n      return months;\r\n    })\r\n    // getPieChartInfos();\r\n    // getCardsInfos();\r\n    // getBarChartInfos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const initialDateArray = initialFilter.split('/');\r\n    const finalDateArray = finalFilter.split('/');\r\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\r\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    getPieChartInfos(initialDate, finalDate);\r\n    getCardsInfos(initialDate, finalDate);\r\n    getBarChartInfos(initialDate, finalDate);\r\n    getMetrics(initialDate, finalDate);\r\n  }, [initialFilter, finalFilter, category]);\r\n\r\n  useEffect(() => {\r\n    selectedProduct && setSelectedProduct(null);\r\n    setSearchResult(() =>\r\n      search\r\n        ? products.filter(product => product.descricao_produto.includes(search.toUpperCase()))\r\n        : []\r\n    )\r\n  }, [search]);\r\n\r\n  return (\r\n    <DashboardWrapper>\r\n      <DashboardHeader>\r\n        <div>\r\n          <h1>Olá, {session.name} {session.last_name}</h1>\r\n          <small>Bem vindo(a) de volta!</small>\r\n        </div>\r\n        <img src={user.avatar} alt={session.name} />\r\n      </DashboardHeader>\r\n\r\n      \r\n      <CardsArea>\r\n        <div className=\"cards\" >\r\n          <div>\r\n          <iframe width=\"100%\" height=\"800px\" src=\"https://brurei-cd2-ai-internal-trainning.hf.space/?__theme=light&__sign=eyJhbGciOiJFZERTQSJ9.eyJzdWIiOiJicnVyZWkvY2QyLWFpLWludGVybmFsLXRyYWlubmluZyIsImV4cCI6MTY4MTE3MjgyNiwiaXNzIjoiaHVnZ2luZ2ZhY2UtbW9vbiJ9.HNNu868GXYTw46Eb5aUrnrMfDSORMYnGp_rmNNCr5n6P3tHxFSWjaRumlBd7wPDgVeYyl0lxJNux4VBae7tEBQ\" ></iframe>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </CardsArea>\r\n\r\n         </DashboardWrapper>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\index.js",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Users\\index.js",["235","236","237","238","239"],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\ForgotPassword\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Notifications\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Menu\\index.js",["240","241","242","243","244","245","246","247","248","249"],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Login\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\Card.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\BarChart.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\PieChart.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\DefaultDashboardContainer.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\services\\api.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Users\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\Pagination.js",["250"],[],"import { PaginationArea } from \"./styles\";\r\n\r\nconst MAX_ITEMS = 5;\r\nconst MAX_LEFT = (MAX_ITEMS - 1) / 2; \r\n\r\nexport default function Pagination({ limit, total, offset, setOffset, showPerPage }) {\r\n  const currentPage = offset ? (offset / limit) + 1 : 1;\r\n  const totalPages = Math.ceil(total / limit);\r\n  const firstPage = Math.max(currentPage - MAX_LEFT, 1); \r\n  const lastItem = offset + Number(showPerPage);\r\n\r\n  function handlePageChange(page){\r\n    setOffset((page - 1) * limit);\r\n  }\r\n\r\n  return (\r\n    <PaginationArea>\r\n      <div>\r\n        Mostrando <span>{offset + 1} - {lastItem > total ? total : lastItem}</span> de <span>{total}</span> produtos\r\n      </div>\r\n      <ul>\r\n        <li \r\n          className=\"previous\"\r\n          onClick={() => {\r\n            currentPage !== 1 && handlePageChange(currentPage - 1)}\r\n          }\r\n        >\r\n          Anterior\r\n        </li>\r\n        {Array.from({ length: Math.min(MAX_ITEMS, totalPages) })\r\n          .map((_, index) => index + firstPage)\r\n          .map((page) => {\r\n            if(page <= totalPages) {\r\n              return (\r\n                <li \r\n                  key={page} \r\n                  className={currentPage === page ? 'active' : ''}\r\n                  onClick={() => handlePageChange(page)}\r\n                >\r\n                  {page}\r\n                </li>\r\n            )}\r\n          })}\r\n          <li \r\n            className=\"next\"\r\n            onClick={() => {\r\n              currentPage < totalPages && handlePageChange(currentPage + 1)}\r\n            }\r\n          >\r\n            Próximo\r\n          </li>\r\n      </ul>\r\n    </PaginationArea>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Notifications\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\ForgotPassword\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Menu\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\utils\\toast.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Button\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Loading\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\InputWithIcon\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Modal\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\PageContainer\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Button\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\InputWithIcon\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Modal\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\PageContainer\\styles.js",[],[],{"ruleId":"251","severity":1,"message":"252","line":1,"column":25,"nodeType":"253","messageId":"254","endLine":1,"endColumn":34},{"ruleId":"251","severity":1,"message":"255","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":14},{"ruleId":"251","severity":1,"message":"256","line":23,"column":11,"nodeType":"253","messageId":"254","endLine":23,"endColumn":21},{"ruleId":"251","severity":1,"message":"257","line":15,"column":10,"nodeType":"253","messageId":"254","endLine":15,"endColumn":22},{"ruleId":"251","severity":1,"message":"258","line":16,"column":20,"nodeType":"253","messageId":"254","endLine":16,"endColumn":31},{"ruleId":"251","severity":1,"message":"259","line":17,"column":10,"nodeType":"253","messageId":"254","endLine":17,"endColumn":17},{"ruleId":"251","severity":1,"message":"260","line":23,"column":10,"nodeType":"253","messageId":"254","endLine":23,"endColumn":24},{"ruleId":"251","severity":1,"message":"261","line":28,"column":10,"nodeType":"253","messageId":"254","endLine":28,"endColumn":17},{"ruleId":"251","severity":1,"message":"262","line":33,"column":10,"nodeType":"253","messageId":"254","endLine":33,"endColumn":22},{"ruleId":"251","severity":1,"message":"263","line":39,"column":10,"nodeType":"253","messageId":"254","endLine":39,"endColumn":22},{"ruleId":"251","severity":1,"message":"264","line":48,"column":10,"nodeType":"253","messageId":"254","endLine":48,"endColumn":15},{"ruleId":"251","severity":1,"message":"265","line":51,"column":18,"nodeType":"253","messageId":"254","endLine":51,"endColumn":27},{"ruleId":"251","severity":1,"message":"266","line":52,"column":10,"nodeType":"253","messageId":"254","endLine":52,"endColumn":22},{"ruleId":"251","severity":1,"message":"267","line":55,"column":9,"nodeType":"253","messageId":"254","endLine":55,"endColumn":22},{"ruleId":"251","severity":1,"message":"268","line":56,"column":9,"nodeType":"253","messageId":"254","endLine":56,"endColumn":26},{"ruleId":"251","severity":1,"message":"269","line":58,"column":10,"nodeType":"253","messageId":"254","endLine":58,"endColumn":21},{"ruleId":"251","severity":1,"message":"270","line":261,"column":12,"nodeType":"253","messageId":"254","endLine":261,"endColumn":24},{"ruleId":"271","severity":1,"message":"272","line":335,"column":6,"nodeType":"273","endLine":335,"endColumn":8,"suggestions":"274"},{"ruleId":"271","severity":1,"message":"275","line":349,"column":6,"nodeType":"273","endLine":349,"endColumn":44,"suggestions":"276"},{"ruleId":"271","severity":1,"message":"277","line":358,"column":6,"nodeType":"273","endLine":358,"endColumn":14,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":374,"column":11,"nodeType":"281","endLine":374,"endColumn":347},{"ruleId":"251","severity":1,"message":"282","line":5,"column":3,"nodeType":"253","messageId":"254","endLine":5,"endColumn":12},{"ruleId":"251","severity":1,"message":"283","line":6,"column":3,"nodeType":"253","messageId":"254","endLine":6,"endColumn":22},{"ruleId":"251","severity":1,"message":"284","line":9,"column":3,"nodeType":"253","messageId":"254","endLine":9,"endColumn":17},{"ruleId":"251","severity":1,"message":"285","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":12},{"ruleId":"251","severity":1,"message":"286","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":21},{"ruleId":"251","severity":1,"message":"287","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":33},{"ruleId":"251","severity":1,"message":"288","line":17,"column":8,"nodeType":"253","messageId":"254","endLine":17,"endColumn":17},{"ruleId":"251","severity":1,"message":"289","line":18,"column":8,"nodeType":"253","messageId":"254","endLine":18,"endColumn":16},{"ruleId":"251","severity":1,"message":"290","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":18},{"ruleId":"251","severity":1,"message":"257","line":25,"column":10,"nodeType":"253","messageId":"254","endLine":25,"endColumn":22},{"ruleId":"251","severity":1,"message":"258","line":26,"column":20,"nodeType":"253","messageId":"254","endLine":26,"endColumn":31},{"ruleId":"251","severity":1,"message":"259","line":27,"column":10,"nodeType":"253","messageId":"254","endLine":27,"endColumn":17},{"ruleId":"251","severity":1,"message":"260","line":33,"column":10,"nodeType":"253","messageId":"254","endLine":33,"endColumn":24},{"ruleId":"251","severity":1,"message":"261","line":38,"column":10,"nodeType":"253","messageId":"254","endLine":38,"endColumn":17},{"ruleId":"251","severity":1,"message":"262","line":43,"column":10,"nodeType":"253","messageId":"254","endLine":43,"endColumn":22},{"ruleId":"251","severity":1,"message":"263","line":49,"column":10,"nodeType":"253","messageId":"254","endLine":49,"endColumn":22},{"ruleId":"251","severity":1,"message":"264","line":58,"column":10,"nodeType":"253","messageId":"254","endLine":58,"endColumn":15},{"ruleId":"251","severity":1,"message":"265","line":61,"column":18,"nodeType":"253","messageId":"254","endLine":61,"endColumn":27},{"ruleId":"251","severity":1,"message":"266","line":62,"column":10,"nodeType":"253","messageId":"254","endLine":62,"endColumn":22},{"ruleId":"251","severity":1,"message":"267","line":65,"column":9,"nodeType":"253","messageId":"254","endLine":65,"endColumn":22},{"ruleId":"251","severity":1,"message":"268","line":66,"column":9,"nodeType":"253","messageId":"254","endLine":66,"endColumn":26},{"ruleId":"251","severity":1,"message":"269","line":68,"column":10,"nodeType":"253","messageId":"254","endLine":68,"endColumn":21},{"ruleId":"251","severity":1,"message":"270","line":271,"column":12,"nodeType":"253","messageId":"254","endLine":271,"endColumn":24},{"ruleId":"271","severity":1,"message":"272","line":345,"column":6,"nodeType":"273","endLine":345,"endColumn":8,"suggestions":"291"},{"ruleId":"271","severity":1,"message":"275","line":359,"column":6,"nodeType":"273","endLine":359,"endColumn":44,"suggestions":"292"},{"ruleId":"271","severity":1,"message":"277","line":368,"column":6,"nodeType":"273","endLine":368,"endColumn":14,"suggestions":"293"},{"ruleId":"279","severity":1,"message":"280","line":384,"column":11,"nodeType":"281","endLine":384,"endColumn":388},{"ruleId":"251","severity":1,"message":"294","line":20,"column":23,"nodeType":"253","messageId":"254","endLine":20,"endColumn":37},{"ruleId":"271","severity":1,"message":"295","line":121,"column":6,"nodeType":"273","endLine":121,"endColumn":27,"suggestions":"296"},{"ruleId":"271","severity":1,"message":"297","line":131,"column":6,"nodeType":"273","endLine":131,"endColumn":13,"suggestions":"298"},{"ruleId":"271","severity":1,"message":"299","line":139,"column":6,"nodeType":"273","endLine":139,"endColumn":8,"suggestions":"300"},{"ruleId":"271","severity":1,"message":"301","line":148,"column":6,"nodeType":"273","endLine":148,"endColumn":14,"suggestions":"302"},{"ruleId":"251","severity":1,"message":"303","line":28,"column":34,"nodeType":"253","messageId":"254","endLine":28,"endColumn":44},{"ruleId":"251","severity":1,"message":"304","line":28,"column":46,"nodeType":"253","messageId":"254","endLine":28,"endColumn":54},{"ruleId":"305","severity":1,"message":"306","line":39,"column":15,"nodeType":"307","messageId":"308","endLine":39,"endColumn":17},{"ruleId":"305","severity":1,"message":"306","line":44,"column":22,"nodeType":"307","messageId":"308","endLine":44,"endColumn":24},{"ruleId":"305","severity":1,"message":"309","line":44,"column":56,"nodeType":"307","messageId":"308","endLine":44,"endColumn":58},{"ruleId":"251","severity":1,"message":"310","line":51,"column":12,"nodeType":"253","messageId":"254","endLine":51,"endColumn":36},{"ruleId":"305","severity":1,"message":"306","line":52,"column":21,"nodeType":"307","messageId":"308","endLine":52,"endColumn":23},{"ruleId":"305","severity":1,"message":"306","line":56,"column":28,"nodeType":"307","messageId":"308","endLine":56,"endColumn":30},{"ruleId":"305","severity":1,"message":"309","line":56,"column":62,"nodeType":"307","messageId":"308","endLine":56,"endColumn":64},{"ruleId":"305","severity":1,"message":"309","line":64,"column":20,"nodeType":"307","messageId":"308","endLine":64,"endColumn":22},{"ruleId":"311","severity":1,"message":"312","line":32,"column":23,"nodeType":"313","messageId":"314","endLine":32,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setSession' is assigned a value but never used.","'importsToday' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'imports' is assigned a value but never used.","'singleProducts' is assigned a value but never used.","'clients' is assigned a value but never used.","'pieChartData' is assigned a value but never used.","'barChartData' is assigned a value but never used.","'dates' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'searchResult' is assigned a value but never used.","'metricsHeader' is assigned a value but never used.","'categoriesOptions' is assigned a value but never used.","'metricsBody' is assigned a value but never used.","'handleSearch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'today'. Either include it or remove the dependency array.","ArrayExpression",["315"],"React Hook useEffect has missing dependencies: 'getBarChartInfos', 'getCardsInfos', 'getMetrics', and 'getPieChartInfos'. Either include them or remove the dependency array.",["316"],"React Hook useEffect has missing dependencies: 'products' and 'selectedProduct'. Either include them or remove the dependency array.",["317"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'ChartsRow' is defined but never used.","'DashboardFilterArea' is defined but never used.","'MetricProducts' is defined but never used.","'Card' is defined but never used.","'InputWithIcon' is defined but never used.","'DefaultDashboardContainer' is defined but never used.","'BarCharts' is defined but never used.","'PieChart' is defined but never used.","'SearchIcon' is defined but never used.",["318"],["319"],["320"],"'setPermissions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["321"],"React Hook useEffect has a missing dependency: 'offset'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBody' needs the current value of 'offset'.",["322"],"React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["323"],"React Hook useEffect has missing dependencies: 'offset' and 'users'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBody' needs the current value of 'offset'.",["324"],"'categories' is assigned a value but never used.","'partners' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'handleClickInsideSubMenu' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"325","fix":"331"},{"desc":"327","fix":"332"},{"desc":"329","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [today]",{"range":"342","text":"343"},"Update the dependencies array to be: [initialFilter, finalFilter, category, getPieChartInfos, getCardsInfos, getBarChartInfos, getMetrics]",{"range":"344","text":"345"},"Update the dependencies array to be: [products, search, selectedProduct]",{"range":"346","text":"347"},{"range":"348","text":"343"},{"range":"349","text":"345"},{"range":"350","text":"347"},"Update the dependencies array to be: [offset, showPerPage, users]",{"range":"351","text":"352"},"Update the dependencies array to be: [offset, users]",{"range":"353","text":"354"},"Update the dependencies array to be: [setUsers]",{"range":"355","text":"356"},"Update the dependencies array to be: [offset, search, users]",{"range":"357","text":"358"},[11149,11151],"[today]",[11749,11787],"[initialFilter, finalFilter, category, getPieChartInfos, getCardsInfos, getBarChartInfos, getMetrics]",[12027,12035],"[products, search, selectedProduct]",[11541,11543],[12141,12179],[12419,12427],[4096,4117],"[offset, showPerPage, users]",[4296,4303],"[offset, users]",[4478,4480],"[setUsers]",[4663,4671],"[offset, search, users]"]