[{"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\index.js":"1","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\App.js":"2","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\styles\\globalStyles.js":"3","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\routes.js":"4","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\contexts\\global.js":"5","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Login\\index.js":"6","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\FirstAccess\\index.js":"7","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\index.js":"8","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\index.js":"9","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Users\\index.js":"10","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\ForgotPassword\\index.js":"11","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Notifications\\index.js":"12","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Menu\\index.js":"13","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Login\\styles.js":"14","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\styles.js":"15","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\styles.js":"16","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\Card.js":"17","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\BarChart.js":"18","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\PieChart.js":"19","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\DefaultDashboardContainer.js":"20","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\services\\api.js":"21","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Users\\styles.js":"22","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\Pagination.js":"23","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Notifications\\styles.js":"24","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\ForgotPassword\\styles.js":"25","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Menu\\styles.js":"26","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\utils\\toast.js":"27","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Button\\index.js":"28","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Loading\\index.js":"29","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\InputWithIcon\\index.js":"30","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Modal\\index.js":"31","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\PageContainer\\index.js":"32","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Button\\styles.js":"33","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\InputWithIcon\\styles.js":"34","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Modal\\styles.js":"35","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\PageContainer\\styles.js":"36"},{"size":323,"mtime":1684442890528,"results":"37","hashOfConfig":"38"},{"size":249,"mtime":1684442890497,"results":"39","hashOfConfig":"38"},{"size":1412,"mtime":1684445174437,"results":"40","hashOfConfig":"38"},{"size":1189,"mtime":1684442890548,"results":"41","hashOfConfig":"38"},{"size":1648,"mtime":1684442890527,"results":"42","hashOfConfig":"38"},{"size":4191,"mtime":1684444974805,"results":"43","hashOfConfig":"38"},{"size":3355,"mtime":1684444894110,"results":"44","hashOfConfig":"38"},{"size":12868,"mtime":1684442890545,"results":"45","hashOfConfig":"38"},{"size":13278,"mtime":1684442890533,"results":"46","hashOfConfig":"38"},{"size":9248,"mtime":1684442890547,"results":"47","hashOfConfig":"38"},{"size":2220,"mtime":1684442890537,"results":"48","hashOfConfig":"38"},{"size":3439,"mtime":1684442890541,"results":"49","hashOfConfig":"38"},{"size":6505,"mtime":1684442890522,"results":"50","hashOfConfig":"38"},{"size":1828,"mtime":1684442890539,"results":"51","hashOfConfig":"38"},{"size":6689,"mtime":1684442890546,"results":"52","hashOfConfig":"38"},{"size":5672,"mtime":1684442890534,"results":"53","hashOfConfig":"38"},{"size":773,"mtime":1684442890532,"results":"54","hashOfConfig":"38"},{"size":734,"mtime":1684445174521,"results":"55","hashOfConfig":"38"},{"size":1198,"mtime":1684445174437,"results":"56","hashOfConfig":"38"},{"size":462,"mtime":1684442890532,"results":"57","hashOfConfig":"38"},{"size":2012,"mtime":1684442890549,"results":"58","hashOfConfig":"38"},{"size":5476,"mtime":1684442890548,"results":"59","hashOfConfig":"38"},{"size":1633,"mtime":1684442890542,"results":"60","hashOfConfig":"38"},{"size":2968,"mtime":1684442890541,"results":"61","hashOfConfig":"38"},{"size":1396,"mtime":1684442890538,"results":"62","hashOfConfig":"38"},{"size":3350,"mtime":1684442890523,"results":"63","hashOfConfig":"38"},{"size":417,"mtime":1684442890550,"results":"64","hashOfConfig":"38"},{"size":202,"mtime":1684442890518,"results":"65","hashOfConfig":"38"},{"size":211,"mtime":1684445174521,"results":"66","hashOfConfig":"38"},{"size":844,"mtime":1684442890520,"results":"67","hashOfConfig":"38"},{"size":829,"mtime":1684442890524,"results":"68","hashOfConfig":"38"},{"size":341,"mtime":1684442890525,"results":"69","hashOfConfig":"38"},{"size":350,"mtime":1684442890519,"results":"70","hashOfConfig":"38"},{"size":869,"mtime":1684442890520,"results":"71","hashOfConfig":"38"},{"size":266,"mtime":1684442890525,"results":"72","hashOfConfig":"38"},{"size":772,"mtime":1684445174521,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lmmmp1",{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\App.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\styles\\globalStyles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\routes.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\contexts\\global.js",["189"],[],"import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const GlobalContext = createContext({});\r\n\r\nexport default function GlobalProvider({ children }) {\r\n  const [user, setUser] = useState({\r\n    name: \"Domazzi\", avatar: \"https://www.w3schools.com/howto/img_avatar.png\"\r\n  });\r\n  const [notifications, setNotifications] = useState([\r\n    {title: 'Um novo relatório mensal está pronto para download!', description: 'O relatório mensal de Operações está pronto para visualização e Download. Verifique todos os dados presentes no relatório.', type: 'description', date: '06/02/2023',\r\n      file: {title: 'Relatório teste.pdf', type: 'pdf'}    \r\n    },\r\n    {title: 'Um novo relatório financeiro está disponível para visualização!', description: 'Em breve!', type: 'payments', date: '06/02/2023'},\r\n    {title: 'Notamos gastos anormalmente altos no mês de Fevereiro.', description: 'Em breve!', type: 'warning', date: '06/02/2023'},\r\n  ]);\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [partners, setPartners] = useState([]);\r\n  const [session, setSession] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      user, setUser, \r\n      users, setUsers,\r\n      notifications, setNotifications,\r\n      products, setProducts,\r\n      categories, setCategories,\r\n      partners, setPartners,\r\n      session, setSession,\r\n      filteredProducts, setFilteredProducts\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Login\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\FirstAccess\\index.js",["190","191"],[],"import { useContext, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport Logo from '../../assets/logo.png';\r\nimport LogoMobile from '../../assets/logoMobile.png';\r\nimport VisibilityIcon from '../../assets/icons/visibility.png';\r\nimport VisibilityOffIcon from '../../assets/icons/visibility_off.png';\r\nimport LockIcon from '../../assets/icons/lock.png';\r\nimport InputWithIcon from \"../../components/InputWithIcon\";\r\nimport Button from \"../../components/Button\";\r\nimport { GlobalContext } from '../../contexts/global';\r\nimport Loading from \"../../components/Loading\";\r\nimport { LoginLeftWrapper, LoginRightWrapper } from \"../Login/styles\";\r\nimport { firstAccess } from \"../../services/api\";\r\n\r\nexport default function FirstAccess() {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const { setSession, session } = useContext(GlobalContext);\r\n  const navigate = useNavigate();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!newPassword || !confirmPassword) {\r\n      setError('Preencha os campos!');\r\n    } else if (newPassword !== confirmPassword) {\r\n      setError('Verifique as senhas digitas!');\r\n    } else {\r\n      setIsLoading(true);\r\n\r\n      firstAccess(session, newPassword)\r\n        .then(() => {\r\n          navigate('/assistente-virtual');\r\n        }).catch((err) => {\r\n          setError('Falha ao atualizar senha!');\r\n          console.log(err);\r\n\r\n          setIsLoading(false);\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LoginLeftWrapper>\r\n        <img src={Logo} alt=\"CD2 GPT Super\" />\r\n        <h2>Bem vindo(a) ao <br /> Esteticista Virtual Laissa Pacheco.</h2>\r\n      </LoginLeftWrapper>\r\n\r\n      <LoginRightWrapper>\r\n        <img src={LogoMobile} alt=\"CD2 GPT Super\" />\r\n        <h2>Este é seu primeiro <br /> acesso na aplicação.</h2>\r\n        <p>Crie uma nova senha para entrar.</p>\r\n        <form onSubmit={handleSubmit}>\r\n          <InputWithIcon\r\n            label=\"Nova Senha\" placeholder=\"Insira a nova senha\"\r\n            value={newPassword} setValue={setNewPassword}\r\n            left={{ src: LockIcon }}\r\n            right={{\r\n              src: showNewPassword ? VisibilityOffIcon : VisibilityIcon,\r\n              onClick: () => setShowNewPassword(!showNewPassword)\r\n            }}\r\n            type={showNewPassword ? 'text' : 'password'}\r\n          />\r\n\r\n          <InputWithIcon\r\n            label=\"Confirmar Senha\" placeholder=\"Confirme a senha\"\r\n            value={confirmPassword} setValue={setConfirmPassword}\r\n            left={{ src: LockIcon, }}\r\n            right={{\r\n              src: showConfirmPassword ? VisibilityOffIcon : VisibilityIcon,\r\n              onClick: () => setShowConfirmPassword(!showConfirmPassword)\r\n            }}\r\n            type={showConfirmPassword ? 'text' : 'password'}\r\n          />\r\n\r\n          {error && <span className=\"error\">{error}</span>}\r\n\r\n          <Button color=\"branding\" text=\"Concluir\" />\r\n        </form>\r\n        <Loading isLoading={isLoading} />\r\n      </LoginRightWrapper>\r\n    </>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\index.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  CardsArea,\r\n  DashboardHeader,\r\n  DashboardWrapper,\r\n} from \"./styles\";\r\n\r\nimport { GlobalContext } from '../../contexts/global';\r\n\r\n\r\nexport default function Products() {\r\n  const { user, session, products, partners, categories } = useContext(GlobalContext);\r\n  const today = new Date();\r\n  const [importsToday, setImportsToday] = useState([]);\r\n  const [category, setCategory] = useState('Categoria');\r\n  const [imports, setImports] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0,\r\n    lastMonthDate: ''\r\n  });\r\n  const [singleProducts, setSingleProducts] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0\r\n  });\r\n  const [clients, setClients] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0\r\n  })\r\n  const [pieChartData, setPieChartData] = useState([\r\n    [\"Parceiro\", \"Vendas\"],\r\n    [\"Hippo\", 0],\r\n    [\"Zaffari\", 0,],\r\n    [\"Super pão\", 0],\r\n  ]);\r\n  const [barChartData, setBarChartData] = useState([\r\n    ['', 'Última Entrada (un)', 'Última Saída (un)'],\r\n    ['Set', 0, 0],\r\n    ['Out', 0, 0],\r\n    ['Nov', 0, 0],\r\n    ['Dez', 0, 0],\r\n    ['Jan', 0, 0],\r\n    ['Fev', 0, 0],\r\n  ])\r\n  const [dates, setDates] = useState([]);\r\n  const [initialFilter, setInitialFilter] = useState('');\r\n  const [finalFilter, setFinalFilter] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const metricsHeader = ['Parceiros', 'Estoque', 'Qtd. Últ-Entrada', 'Qtd. Últ-Saída'];\r\n  const categoriesOptions = ['Categoria', ...categories]\r\n\r\n  const [metricsBody, setMetricsBody] = useState([]);\r\n\r\n  function getCardsInfos(initialDate, finalDate) {\r\n    let singleProducts = [];\r\n    let singleProductsLastMonth = [];\r\n    let clients = [];\r\n    let clientsLastMonth = [];\r\n    let importedProducts = [];\r\n    let importedProductsLastMonth = [];\r\n    const firstDayMonth = new Date().setDate(1);\r\n    let productsLastMonth = products.filter(product =>\r\n      new Date(product.created_at).getTime() < firstDayMonth\r\n    );\r\n\r\n    if (initialDate && finalDate) {\r\n      importedProducts = products.filter(product => {\r\n        const created = new Date(product.created_at).getTime();\r\n        const updated = new Date(product.updated_at).getTime();\r\n        const match = updated || created\r\n        return (\r\n          match >= initialDate.getTime() &&\r\n          match <= finalDate.getTime()\r\n        )\r\n      });\r\n\r\n      importedProductsLastMonth = products.filter(product => {\r\n        const created = new Date(product.created_at).getTime();\r\n        const updated = new Date(product.updated_at).getTime();\r\n        const match = updated || created\r\n        finalDate.setDate(1);\r\n        return (\r\n          match >= initialDate.getTime() &&\r\n          match < finalDate.getTime()\r\n        )\r\n      });\r\n\r\n      setImports(() => ({\r\n        thisMonth: importedProducts,\r\n        lastMonth: importedProductsLastMonth,\r\n        diff: (importedProducts.length - importedProductsLastMonth.length) / importedProductsLastMonth.length * 100\r\n      }));\r\n\r\n\r\n      finalDate.setMonth(finalDate.getMonth() + 1);\r\n      finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n      products.forEach(product => {\r\n        const { codigo_acesso_principal, parceiro, created_at } = product;\r\n\r\n        const haveGeneral = singleProducts.some(product =>\r\n          product.codigo_acesso_principal === codigo_acesso_principal\r\n        );\r\n        const haveClient = singleProducts.some(product =>\r\n          product.parceiro === parceiro\r\n        );\r\n\r\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) <= finalDate.getTime();\r\n        if (!haveGeneral && matchTime) {\r\n          singleProducts.push(product);\r\n        } else {\r\n        }\r\n        if (!haveClient && matchTime) {\r\n          clients.push(parceiro);\r\n        }\r\n      });\r\n\r\n      productsLastMonth.forEach(product => {\r\n        const { codigo_acesso_principal, parceiro, created_at } = product;\r\n        const haveLastMonth = singleProductsLastMonth.some(product =>\r\n          product.codigo_acesso_principal === codigo_acesso_principal\r\n        );\r\n        const haveClient = singleProductsLastMonth.some(product =>\r\n          product.parceiro === parceiro\r\n        );\r\n        finalDate.setDate(1);\r\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) < finalDate.getTime();\r\n        if (!haveLastMonth && matchTime) {\r\n          singleProductsLastMonth.push(product);\r\n        }\r\n        if (!haveClient && matchTime) {\r\n          clientsLastMonth.push(parceiro);\r\n        }\r\n      });\r\n\r\n      setClients(() => ({\r\n        thisMonth: clients,\r\n        lastMonth: clientsLastMonth,\r\n        diff: (clients.length - clientsLastMonth.length) / clientsLastMonth.length * 100\r\n      }));\r\n\r\n      setSingleProducts(() => ({\r\n        thisMonth: singleProducts,\r\n        lastMonth: singleProductsLastMonth,\r\n        diff: (singleProducts.length - singleProductsLastMonth.length) / singleProductsLastMonth.length * 100\r\n      }));\r\n    }\r\n\r\n    const imports = products.filter(product => {\r\n      return new Date(product.updated_at).toLocaleDateString() === today.toLocaleDateString();\r\n    });\r\n    setImportsToday(imports);\r\n  }\r\n\r\n  function getBarChartInfos(initialDate, finalDate) {\r\n    let result = [];\r\n    let filteredProducts = [];\r\n    // const data = [];\r\n\r\n    let currentDate = new Date(initialDate);\r\n    while (currentDate <= finalDate) {\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n      const year = currentDate.getFullYear();\r\n      const dateString = `${month}/${year}`;\r\n      const dateValue = new Date(currentDate);\r\n      result.push({ dateString, dateValue });\r\n      currentDate.setMonth(currentDate.getMonth() + 1);\r\n    }\r\n\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    const filtered = result.map(month => {\r\n      filteredProducts = products.filter(product => {\r\n        const date = new Date(product.created_at).getTime();\r\n        let finalMonth = new Date(month.dateValue);\r\n        finalMonth.setMonth(month.dateValue.getMonth() + 1);\r\n\r\n        if (category === 'Categoria') {\r\n          return (\r\n            date >= month.dateValue.getTime() &&\r\n            date < finalMonth.getTime()\r\n          )\r\n        } else {\r\n          return (\r\n            category === product.categoria &&\r\n            date >= month.dateValue.getTime() &&\r\n            date < finalMonth.getTime()\r\n          )\r\n        }\r\n      });\r\n      return ({\r\n        month,\r\n        array: filteredProducts,\r\n      })\r\n    })\r\n    const data = filtered.map(element => {\r\n      let entry = 0;\r\n      let exit = 0;\r\n      element.array.forEach(product => {\r\n        entry = entry + parseInt(product.qtd_ult_compra);\r\n        exit = exit + parseInt(product.qtd_ult_saida);\r\n      })\r\n      return ([\r\n        element.month.dateString,\r\n        entry,\r\n        exit,\r\n      ]\r\n      )\r\n    })\r\n    setBarChartData([\r\n      ['', 'Última Entrada (un)', 'Última Saída (un)'],\r\n      ...data\r\n    ])\r\n  }\r\n\r\n  function getPieChartInfos(initialDate, finalDate) {\r\n    const data = partners.map(partner => {\r\n      let total = 0;\r\n      const productsPartner = products.filter(product => {\r\n        const date = new Date(product.created_at).getTime();\r\n        if (initialDate && finalDate) {\r\n          if (category === 'Categoria') {\r\n            return (\r\n              product.parceiro === partner &&\r\n              date >= initialDate.getTime() &&\r\n              date <= finalDate.getTime()\r\n            )\r\n          } else {\r\n            return (\r\n              category === product.categoria &&\r\n              product.parceiro === partner &&\r\n              date >= initialDate.getTime() &&\r\n              date <= finalDate.getTime()\r\n            )\r\n          }\r\n\r\n        } else {\r\n          return product.parceiro === partner\r\n        }\r\n      });\r\n      productsPartner.forEach(product => {\r\n        if (product.qtd_ult_saida) {\r\n          total = total + parseInt(product.qtd_ult_saida);\r\n        }\r\n      });\r\n      return [partner, total]\r\n    })\r\n    setPieChartData([\r\n      ['Parceiro', 'Entradas'],\r\n      ...data\r\n    ])\r\n  }\r\n\r\n  function handleSearch() {\r\n    setSelectedProduct(() =>\r\n      products.find(product => product.descricao_produto === search)\r\n    );\r\n    const initialDateArray = initialFilter.split('/');\r\n    const finalDateArray = finalFilter.split('/');\r\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\r\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    getBarChartInfos(initialDate, finalDate);\r\n  }\r\n\r\n  function getMetrics(initialDate, finalDate) {\r\n    const metrics = partners.map(partner => {\r\n      const filtered = products.filter(product => {\r\n        const { categoria, created_at, updated_at, parceiro } = product;\r\n        const created = new Date(created_at).getTime();\r\n        const updated = new Date(updated_at).getTime();\r\n        const match = updated || created\r\n        if (category === 'Categoria') {\r\n          return (\r\n            partner === parceiro &&\r\n            match >= initialDate.getTime() &&\r\n            match <= finalDate.getTime()\r\n          )\r\n        } else {\r\n          return (\r\n            category === categoria &&\r\n            partner === parceiro &&\r\n            match >= initialDate.getTime() &&\r\n            match <= finalDate.getTime()\r\n          )\r\n        }\r\n      })\r\n      let result = [partner];\r\n      let stock = 0;\r\n      let amountLastExit = 0;\r\n      let amountEntry = 0;\r\n      filtered.forEach(product => {\r\n        const { qtd_ult_compra, qtd_ult_saida, estq_disponivel } = product;\r\n        if (estq_disponivel) {\r\n          stock = stock + Math.trunc(Number(estq_disponivel));\r\n        }\r\n        if (qtd_ult_compra) {\r\n          amountEntry = amountEntry + Math.trunc(Number(qtd_ult_compra));\r\n        }\r\n        if (qtd_ult_saida) {\r\n          amountLastExit = amountLastExit + Math.trunc(Number(qtd_ult_saida));\r\n        }\r\n      })\r\n      result.push(stock + ' un.', amountEntry + ' un.', amountLastExit + ' un.');\r\n      return result\r\n    });\r\n    setMetricsBody(metrics);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDates(() => {\r\n      let months = [];\r\n      months.push(`${(today.getMonth() + 1).toString().padStart(2, '0')}/${today.getFullYear()}`);\r\n      for (let i = 1; i <= 4; i++) {\r\n        const pastData = new Date();\r\n        pastData.setMonth(today.getMonth() - i);\r\n        months.push(`${(pastData.getMonth() + 1).toString().padStart(2, '0')}/${pastData.getFullYear()}`);\r\n      }\r\n      setInitialFilter(months[4]);\r\n      setFinalFilter(months[0]);\r\n      return months;\r\n    })\r\n    // getPieChartInfos();\r\n    // getCardsInfos();\r\n    // getBarChartInfos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const initialDateArray = initialFilter.split('/');\r\n    const finalDateArray = finalFilter.split('/');\r\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\r\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    getPieChartInfos(initialDate, finalDate);\r\n    getCardsInfos(initialDate, finalDate);\r\n    getBarChartInfos(initialDate, finalDate);\r\n    getMetrics(initialDate, finalDate);\r\n  }, [initialFilter, finalFilter, category]);\r\n\r\n  useEffect(() => {\r\n    selectedProduct && setSelectedProduct(null);\r\n    setSearchResult(() =>\r\n      search\r\n        ? products.filter(product => product.descricao_produto.includes(search.toUpperCase()))\r\n        : []\r\n    )\r\n  }, [search]);\r\n\r\n  return (\r\n    <DashboardWrapper>\r\n      <DashboardHeader>\r\n        <div>\r\n          <h1>Olá, {session.name} {session.last_name}</h1>\r\n          <small>Bem vindo(a) de volta!</small>\r\n        </div>\r\n        <img src={user.avatar} alt={session.name} />\r\n      </DashboardHeader>\r\n\r\n      \r\n      <CardsArea>\r\n        <div className=\"cards\" >\r\n          <div>\r\n          <iframe width=\"100%\" height=\"800px\" src=\"https://brurei-cd2-ai-internal-trainning.hf.space/?__theme=light&__sign=eyJhbGciOiJFZERTQSJ9.eyJzdWIiOiJicnVyZWkvY2QyLWFpLWludGVybmFsLXRyYWlubmluZyIsImV4cCI6MTY4MTE3MjgyNiwiaXNzIjoiaHVnZ2luZ2ZhY2UtbW9vbiJ9.HNNu868GXYTw46Eb5aUrnrMfDSORMYnGp_rmNNCr5n6P3tHxFSWjaRumlBd7wPDgVeYyl0lxJNux4VBae7tEBQ\" ></iframe>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </CardsArea>\r\n\r\n         </DashboardWrapper>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\index.js",["210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  CardsArea,\r\n  ChartsRow,\r\n  DashboardFilterArea,\r\n  DashboardHeader,\r\n  DashboardWrapper,\r\n  MetricProducts\r\n} from \"./styles\";\r\n\r\nimport { GlobalContext } from '../../contexts/global';\r\n\r\nimport Card from './components/Card';\r\nimport InputWithIcon from '../../components/InputWithIcon';\r\nimport DefaultDashboardContainer from \"./components/DefaultDashboardContainer\";\r\nimport BarCharts from \"./components/BarChart\";\r\nimport PieChart from \"./components/PieChart\";\r\n\r\nimport SearchIcon from '../../assets/icons/search.png';\r\n\r\nexport default function Dashboard() {\r\n  const { user, session, products, partners, categories } = useContext(GlobalContext);\r\n  const today = new Date();\r\n  const [importsToday, setImportsToday] = useState([]);\r\n  const [category, setCategory] = useState('Categoria');\r\n  const [imports, setImports] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0,\r\n    lastMonthDate: ''\r\n  });\r\n  const [singleProducts, setSingleProducts] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0\r\n  });\r\n  const [clients, setClients] = useState({\r\n    thisMonth: [],\r\n    lastMonth: [],\r\n    diff: 0.0\r\n  })\r\n  const [pieChartData, setPieChartData] = useState([\r\n    [\"Parceiro\", \"Vendas\"],\r\n    [\"Hippo\", 0],\r\n    [\"Zaffari\", 0,],\r\n    [\"Super pão\", 0],\r\n  ]);\r\n  const [barChartData, setBarChartData] = useState([\r\n    ['', 'Última Entrada (un)', 'Última Saída (un)'],\r\n    ['Set', 0, 0],\r\n    ['Out', 0, 0],\r\n    ['Nov', 0, 0],\r\n    ['Dez', 0, 0],\r\n    ['Jan', 0, 0],\r\n    ['Fev', 0, 0],\r\n  ])\r\n  const [dates, setDates] = useState([]);\r\n  const [initialFilter, setInitialFilter] = useState('');\r\n  const [finalFilter, setFinalFilter] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n  const metricsHeader = ['Parceiros', 'Estoque', 'Qtd. Últ-Entrada', 'Qtd. Últ-Saída'];\r\n  const categoriesOptions = ['Categoria', ...categories]\r\n\r\n  const [metricsBody, setMetricsBody] = useState([]);\r\n\r\n  function getCardsInfos(initialDate, finalDate) {\r\n    let singleProducts = [];\r\n    let singleProductsLastMonth = [];\r\n    let clients = [];\r\n    let clientsLastMonth = [];\r\n    let importedProducts = [];\r\n    let importedProductsLastMonth = [];\r\n    const firstDayMonth = new Date().setDate(1);\r\n    let productsLastMonth = products.filter(product =>\r\n      new Date(product.created_at).getTime() < firstDayMonth\r\n    );\r\n\r\n    if (initialDate && finalDate) {\r\n      importedProducts = products.filter(product => {\r\n        const created = new Date(product.created_at).getTime();\r\n        const updated = new Date(product.updated_at).getTime();\r\n        const match = updated || created\r\n        return (\r\n          match >= initialDate.getTime() &&\r\n          match <= finalDate.getTime()\r\n        )\r\n      });\r\n\r\n      importedProductsLastMonth = products.filter(product => {\r\n        const created = new Date(product.created_at).getTime();\r\n        const updated = new Date(product.updated_at).getTime();\r\n        const match = updated || created\r\n        finalDate.setDate(1);\r\n        return (\r\n          match >= initialDate.getTime() &&\r\n          match < finalDate.getTime()\r\n        )\r\n      });\r\n\r\n      setImports(() => ({\r\n        thisMonth: importedProducts,\r\n        lastMonth: importedProductsLastMonth,\r\n        diff: (importedProducts.length - importedProductsLastMonth.length) / importedProductsLastMonth.length * 100\r\n      }));\r\n\r\n\r\n      finalDate.setMonth(finalDate.getMonth() + 1);\r\n      finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n      products.forEach(product => {\r\n        const { codigo_acesso_principal, parceiro, created_at } = product;\r\n\r\n        const haveGeneral = singleProducts.some(product =>\r\n          product.codigo_acesso_principal === codigo_acesso_principal\r\n        );\r\n        const haveClient = singleProducts.some(product =>\r\n          product.parceiro === parceiro\r\n        );\r\n\r\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) <= finalDate.getTime();\r\n        if (!haveGeneral && matchTime) {\r\n          singleProducts.push(product);\r\n        } else {\r\n        }\r\n        if (!haveClient && matchTime) {\r\n          clients.push(parceiro);\r\n        }\r\n      });\r\n\r\n      productsLastMonth.forEach(product => {\r\n        const { codigo_acesso_principal, parceiro, created_at } = product;\r\n        const haveLastMonth = singleProductsLastMonth.some(product =>\r\n          product.codigo_acesso_principal === codigo_acesso_principal\r\n        );\r\n        const haveClient = singleProductsLastMonth.some(product =>\r\n          product.parceiro === parceiro\r\n        );\r\n        finalDate.setDate(1);\r\n        const matchTime = new Date(created_at) >= initialDate.getTime() && new Date(created_at) < finalDate.getTime();\r\n        if (!haveLastMonth && matchTime) {\r\n          singleProductsLastMonth.push(product);\r\n        }\r\n        if (!haveClient && matchTime) {\r\n          clientsLastMonth.push(parceiro);\r\n        }\r\n      });\r\n\r\n      setClients(() => ({\r\n        thisMonth: clients,\r\n        lastMonth: clientsLastMonth,\r\n        diff: (clients.length - clientsLastMonth.length) / clientsLastMonth.length * 100\r\n      }));\r\n\r\n      setSingleProducts(() => ({\r\n        thisMonth: singleProducts,\r\n        lastMonth: singleProductsLastMonth,\r\n        diff: (singleProducts.length - singleProductsLastMonth.length) / singleProductsLastMonth.length * 100\r\n      }));\r\n    }\r\n\r\n    const imports = products.filter(product => {\r\n      return new Date(product.updated_at).toLocaleDateString() === today.toLocaleDateString();\r\n    });\r\n    setImportsToday(imports);\r\n  }\r\n\r\n  function getBarChartInfos(initialDate, finalDate) {\r\n    let result = [];\r\n    let filteredProducts = [];\r\n    // const data = [];\r\n\r\n    let currentDate = new Date(initialDate);\r\n    while (currentDate <= finalDate) {\r\n      const month = String(currentDate.getMonth() + 1).padStart(2, '0');\r\n      const year = currentDate.getFullYear();\r\n      const dateString = `${month}/${year}`;\r\n      const dateValue = new Date(currentDate);\r\n      result.push({ dateString, dateValue });\r\n      currentDate.setMonth(currentDate.getMonth() + 1);\r\n    }\r\n\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    const filtered = result.map(month => {\r\n      filteredProducts = products.filter(product => {\r\n        const date = new Date(product.created_at).getTime();\r\n        let finalMonth = new Date(month.dateValue);\r\n        finalMonth.setMonth(month.dateValue.getMonth() + 1);\r\n\r\n        if (category === 'Categoria') {\r\n          return (\r\n            date >= month.dateValue.getTime() &&\r\n            date < finalMonth.getTime()\r\n          )\r\n        } else {\r\n          return (\r\n            category === product.categoria &&\r\n            date >= month.dateValue.getTime() &&\r\n            date < finalMonth.getTime()\r\n          )\r\n        }\r\n      });\r\n      return ({\r\n        month,\r\n        array: filteredProducts,\r\n      })\r\n    })\r\n    const data = filtered.map(element => {\r\n      let entry = 0;\r\n      let exit = 0;\r\n      element.array.forEach(product => {\r\n        entry = entry + parseInt(product.qtd_ult_compra);\r\n        exit = exit + parseInt(product.qtd_ult_saida);\r\n      })\r\n      return ([\r\n        element.month.dateString,\r\n        entry,\r\n        exit,\r\n      ]\r\n      )\r\n    })\r\n    setBarChartData([\r\n      ['', 'Última Entrada (un)', 'Última Saída (un)'],\r\n      ...data\r\n    ])\r\n  }\r\n\r\n  function getPieChartInfos(initialDate, finalDate) {\r\n    const data = partners.map(partner => {\r\n      let total = 0;\r\n      const productsPartner = products.filter(product => {\r\n        const date = new Date(product.created_at).getTime();\r\n        if (initialDate && finalDate) {\r\n          if (category === 'Categoria') {\r\n            return (\r\n              product.parceiro === partner &&\r\n              date >= initialDate.getTime() &&\r\n              date <= finalDate.getTime()\r\n            )\r\n          } else {\r\n            return (\r\n              category === product.categoria &&\r\n              product.parceiro === partner &&\r\n              date >= initialDate.getTime() &&\r\n              date <= finalDate.getTime()\r\n            )\r\n          }\r\n\r\n        } else {\r\n          return product.parceiro === partner\r\n        }\r\n      });\r\n      productsPartner.forEach(product => {\r\n        if (product.qtd_ult_saida) {\r\n          total = total + parseInt(product.qtd_ult_saida);\r\n        }\r\n      });\r\n      return [partner, total]\r\n    })\r\n    setPieChartData([\r\n      ['Parceiro', 'Entradas'],\r\n      ...data\r\n    ])\r\n  }\r\n\r\n  function handleSearch() {\r\n    setSelectedProduct(() =>\r\n      products.find(product => product.descricao_produto === search)\r\n    );\r\n    const initialDateArray = initialFilter.split('/');\r\n    const finalDateArray = finalFilter.split('/');\r\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\r\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    getBarChartInfos(initialDate, finalDate);\r\n  }\r\n\r\n  function getMetrics(initialDate, finalDate) {\r\n    const metrics = partners.map(partner => {\r\n      const filtered = products.filter(product => {\r\n        const { categoria, created_at, updated_at, parceiro } = product;\r\n        const created = new Date(created_at).getTime();\r\n        const updated = new Date(updated_at).getTime();\r\n        const match = updated || created\r\n        if (category === 'Categoria') {\r\n          return (\r\n            partner === parceiro &&\r\n            match >= initialDate.getTime() &&\r\n            match <= finalDate.getTime()\r\n          )\r\n        } else {\r\n          return (\r\n            category === categoria &&\r\n            partner === parceiro &&\r\n            match >= initialDate.getTime() &&\r\n            match <= finalDate.getTime()\r\n          )\r\n        }\r\n      })\r\n      let result = [partner];\r\n      let stock = 0;\r\n      let amountLastExit = 0;\r\n      let amountEntry = 0;\r\n      filtered.forEach(product => {\r\n        const { qtd_ult_compra, qtd_ult_saida, estq_disponivel } = product;\r\n        if (estq_disponivel) {\r\n          stock = stock + Math.trunc(Number(estq_disponivel));\r\n        }\r\n        if (qtd_ult_compra) {\r\n          amountEntry = amountEntry + Math.trunc(Number(qtd_ult_compra));\r\n        }\r\n        if (qtd_ult_saida) {\r\n          amountLastExit = amountLastExit + Math.trunc(Number(qtd_ult_saida));\r\n        }\r\n      })\r\n      result.push(stock + ' un.', amountEntry + ' un.', amountLastExit + ' un.');\r\n      return result\r\n    });\r\n    setMetricsBody(metrics);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setDates(() => {\r\n      let months = [];\r\n      months.push(`${(today.getMonth() + 1).toString().padStart(2, '0')}/${today.getFullYear()}`);\r\n      for (let i = 1; i <= 4; i++) {\r\n        const pastData = new Date();\r\n        pastData.setMonth(today.getMonth() - i);\r\n        months.push(`${(pastData.getMonth() + 1).toString().padStart(2, '0')}/${pastData.getFullYear()}`);\r\n      }\r\n      setInitialFilter(months[4]);\r\n      setFinalFilter(months[0]);\r\n      return months;\r\n    })\r\n    // getPieChartInfos();\r\n    // getCardsInfos();\r\n    // getBarChartInfos();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const initialDateArray = initialFilter.split('/');\r\n    const finalDateArray = finalFilter.split('/');\r\n    const initialDate = new Date(initialDateArray[1], parseInt(initialDateArray[0]) - 1, 1);\r\n    let finalDate = new Date(finalDateArray[1], parseInt(finalDateArray[0]) - 1);\r\n    finalDate.setMonth(finalDate.getMonth() + 1);\r\n    finalDate.setDate(finalDate.getDate() - 1);\r\n\r\n    getPieChartInfos(initialDate, finalDate);\r\n    getCardsInfos(initialDate, finalDate);\r\n    getBarChartInfos(initialDate, finalDate);\r\n    getMetrics(initialDate, finalDate);\r\n  }, [initialFilter, finalFilter, category]);\r\n\r\n  useEffect(() => {\r\n    selectedProduct && setSelectedProduct(null);\r\n    setSearchResult(() =>\r\n      search\r\n        ? products.filter(product => product.descricao_produto.includes(search.toUpperCase()))\r\n        : []\r\n    )\r\n  }, [search]);\r\n\r\n  return (\r\n    <DashboardWrapper>\r\n      <DashboardHeader>\r\n        <div>\r\n          <h1>Olá, {session.name} {session.last_name}</h1>\r\n          <small>Bem vindo(a) de volta!</small>\r\n        </div>\r\n        <img src={user.avatar} alt={session.name} />\r\n      </DashboardHeader>\r\n\r\n      \r\n      <CardsArea>\r\n        <div className=\"cards\" >\r\n          <div>\r\n          <iframe  width=\"120%\" frameborder = \"0\" margin-left=\"-2.5px\" height=\"800px\" src=\"https://brurei-cd2-ai-internal.hf.space/?__theme=dark&__sign=eyJhbGciOiJFZERTQSJ9.eyJzdWIiOiJicnVyZWkvY2QyLWFpLWludGVybmFsIiwiZXhwIjoxNjgyNDUyMzgxLCJpc3MiOiJodWdnaW5nZmFjZS1tb29uIn0.clEm5YVAfdiBRuz7S6w7WOPo5PN0I44-5Mzj8NgQwh4qGLgkfQJ3T1B1mMOgmBp8DSQliT2626ueGd_n1WWdAg\" ></iframe>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </CardsArea>\r\n\r\n         </DashboardWrapper>\r\n  )\r\n}\r\n","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Users\\index.js",["237","238","239","240","241"],[],"import { Toaster } from \"react-hot-toast\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport InputWithIcon from \"../../components/InputWithIcon\";\r\nimport Button from \"../../components/Button\";\r\nimport Pagination from \"../Products/Pagination\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { CreateUserModalContent, CreateUserWrapper } from \"./styles\";\r\n\r\nimport UserIcon from '../../assets/icons/user.png';\r\nimport UsersIcon from '../../assets/icons/users.png';\r\nimport EditIcon from '../../assets/icons/edit.png';\r\nimport DeleteIcon from '../../assets/icons/delete.png';\r\nimport MailIcon from '../../assets/icons/mail.png';\r\nimport SearchIcon from '../../assets/icons/search.png';\r\nimport { deleteUser, editUser, getUsers, newUser } from \"../../services/api\";\r\nimport { toastError, toastSuccess } from \"../../utils/toast\";\r\nimport { GlobalContext } from \"../../contexts/global\";\r\n\r\nexport default function Users() {\r\n  const [permissions, setPermissions] = useState([\r\n    'Administrador', 'Gerente', 'Permissão #1', 'Permissão #2',\r\n  ])\r\n\r\n  const [selectedPermission, setSelectedPermission] = useState(null);\r\n  const { users, setUsers } = useContext(GlobalContext);\r\n  const [body, setBody] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const showPerPage = 10;\r\n  const [offset, setOffset] = useState(0);\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [search, setSearch] = useState('');\r\n  const [modalOpened, setModalOpened] = useState(false);\r\n  const [deleteModalOpened, setDeleteModalOpened] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [hiddenPagination, setHiddenPagination] = useState(false);\r\n\r\n  function handleSearch() {\r\n    setBody(() => {\r\n      return users.filter(user => user.name.toUpperCase().startsWith(search.toUpperCase()));\r\n    });\r\n    setHiddenPagination(true);\r\n  }\r\n\r\n  function handleOpenModal() {\r\n    setSelectedUser(null);\r\n    setName('');\r\n    setLastName('');\r\n    setEmail('');\r\n    setModalOpened(true);\r\n  }\r\n\r\n  function handleEdit(user) {\r\n    setSelectedUser(user);\r\n    setName(user.name);\r\n    setLastName(user.last_name);\r\n    setEmail(user.email);\r\n    setModalOpened(true);\r\n  }\r\n\r\n  function handleDelete(user) {\r\n    setSelectedUser(user);\r\n    setDeleteModalOpened(true);\r\n  }\r\n\r\n  function handleDeleteUser() {\r\n    deleteUser(selectedUser).then(() => {\r\n      toastSuccess(\"Usuário deletado com sucesso!\");\r\n      setUsers(old => old.filter(user => user.id !== selectedUser.id));\r\n    }).catch(error => {\r\n      toastError(\"Erro ao deletar usuário!\");\r\n      console.log('Delete user error:', error);\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    if (selectedUser) {\r\n      editUser(selectedUser, name, lastName, email).then((editedUser) => {\r\n        toastSuccess(\"Usuário editado com sucesso!\");\r\n        setIsLoading(false);\r\n        setEmail('');\r\n        setName('');\r\n        setLastName('');\r\n        setUsers(old => {\r\n          let newUsers = [...old];\r\n          const index = newUsers.findIndex(user => user.id === editedUser.id);\r\n          newUsers[index] = editedUser;\r\n          return newUsers;\r\n        });\r\n        setModalOpened(false);\r\n      }).catch(err => {\r\n        toastError(\"Erro ao editar usuário\");\r\n        setIsLoading(false);\r\n        console.log(err);\r\n      })\r\n    } else {\r\n      newUser({ name, last_name: lastName, email }).then(() => {\r\n        toastSuccess(\"Usuário cadastrado com sucesso!\");\r\n        setIsLoading(false);\r\n        setEmail('');\r\n        setName('');\r\n        setLastName('');\r\n        setUsers(old => [...old, { name, lastName, email }]);\r\n        setModalOpened(false);\r\n      }).catch(err => {\r\n        toastError(\"Erro ao cadastrar usuário\");\r\n        setIsLoading(false);\r\n        console.log(err);\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setBody(() =>\r\n      users.slice(offset, offset + Number(showPerPage))\r\n    )\r\n  }, [offset, showPerPage]);\r\n\r\n  useEffect(() => {\r\n    setOffset(0);\r\n  }, [showPerPage]);\r\n\r\n  useEffect(() => {\r\n    setBody(() =>\r\n      users.slice(offset, offset + Number(showPerPage))\r\n    )\r\n  }, [users]);\r\n\r\n  useEffect(() => {\r\n    !modalOpened && setSelectedUser(null);\r\n  }, [modalOpened]);\r\n\r\n  useEffect(() => {\r\n    getUsers().then(response => setUsers(response));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!search) {\r\n      setHiddenPagination(false);\r\n      setBody(() =>\r\n        users.slice(offset, offset + Number(showPerPage))\r\n      )\r\n    }\r\n  }, [search]);\r\n\r\n  return (\r\n    <CreateUserWrapper>\r\n      <Modal opened={modalOpened} setOpened={setModalOpened} customModalContent>\r\n        <CreateUserModalContent>\r\n          <header>\r\n            <h2>{selectedUser ? 'Editar usuário' : 'Cadastrar novo usuário'}</h2>\r\n          </header>\r\n          <form onSubmit={handleSubmit}>\r\n            <span className=\"row\">\r\n              <InputWithIcon\r\n                placeholder=\"Insira o nome\"\r\n                label=\"Nome\"\r\n                left={{ src: UserIcon }}\r\n                value={name} setValue={setName}\r\n              />\r\n              <InputWithIcon\r\n                placeholder=\"Insira o sobrenome\"\r\n                label=\"Sobrenome\"\r\n                left={{ src: UsersIcon }}\r\n                value={lastName} setValue={setLastName}\r\n              />\r\n            </span>\r\n\r\n            <InputWithIcon\r\n              placeholder=\"Insira um e-mail válido\"\r\n              label=\"E-mail\"\r\n              left={{ src: MailIcon }}\r\n              value={email} setValue={setEmail}\r\n              disabled={selectedUser}\r\n            />\r\n\r\n            <h2>Selecione o nível de permissão:</h2>\r\n            <div className=\"permissions\">\r\n              {permissions.map((permission, index) =>\r\n                <label key={index} onClick={() => setSelectedPermission(permission)}>\r\n                  <input type=\"radio\" checked={selectedPermission === permission} />\r\n                  {permission}\r\n                </label>\r\n              )}\r\n            </div>\r\n            <footer>\r\n              <Button color=\"red\" text=\"Cancelar\" onClick={() => setModalOpened(false)} type=\"button\" />\r\n              <Button disabled={isLoading} text={selectedUser ? \"Editar\" : \"Cadastrar\"} color=\"branding\" />\r\n            </footer>\r\n          </form>\r\n        </CreateUserModalContent>\r\n      </Modal>\r\n\r\n      <Modal opened={deleteModalOpened} setOpened={setDeleteModalOpened} customModalContent>\r\n        <CreateUserModalContent>\r\n          <header>\r\n            <h2>Deletar usuário</h2>\r\n          </header>\r\n          <form>\r\n            <h3>Tem certeza que deseja deletar o usuário:</h3>\r\n            <p>Nome: <span>{selectedUser?.name} {selectedUser?.last_name}</span></p>\r\n            <p>E-mail: <span>{selectedUser?.email}</span></p>\r\n            <footer className=\"deleteFooter\">\r\n              <Button text=\"Cancelar\" color=\"gray3\" type=\"button\" onClick={() => setDeleteModalOpened(false)} />\r\n              <Button text=\"Deletar\" color=\"red\" type=\"button\" onClick={handleDeleteUser} />\r\n            </footer>\r\n          </form>\r\n        </CreateUserModalContent>\r\n      </Modal>\r\n\r\n      <Toaster position=\"top-right\" reverseOrder={false} />\r\n      <h1>Cadastrar novo usuário</h1>\r\n      <p>Aqui você encontra a lista e cadastro de usuários.</p>\r\n      <div className=\"headerRow\">\r\n        <Button text=\"Cadastrar usuário\" color=\"branding\" onClick={handleOpenModal} />\r\n        <span>\r\n          <label>Buscar usuário:</label>\r\n          <InputWithIcon\r\n            placeholder=\"Insira um nome\"\r\n            setValue={setSearch}\r\n            value={search}\r\n            onEnter={handleSearch}\r\n            right={{ src: SearchIcon, onClick: handleSearch }}\r\n          />\r\n        </span>\r\n      </div>\r\n\r\n      <table>\r\n        <tbody>\r\n          {body.map((user, index) =>\r\n            <tr key={index} className={selectedUser === user ? 'active' : ''}>\r\n              <td>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={selectedUser === user}\r\n                  onClick={() => setSelectedUser(old => old === user ? null : user)}\r\n                />\r\n              </td>\r\n\r\n              <td>{user.name} {user.last_name}</td>\r\n              <td>{user.email}</td>\r\n\r\n              <td className=\"role\">\r\n                <span className={index % 2 === 0 ? \"adm\" : 'manager'} />\r\n                {index % 2 === 0 ? 'Administrador' : 'Gerente'}\r\n              </td>\r\n\r\n              <td className=\"actions\">\r\n                <button onClick={() => handleEdit(user)}>\r\n                  <img src={EditIcon} alt=\"\" />\r\n                </button>\r\n\r\n                <button onClick={() => handleDelete(user)}>\r\n                  <img src={DeleteIcon} alt=\"\" />\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      {!hiddenPagination &&\r\n        <Pagination limit={showPerPage} total={users.length} offset={offset} setOffset={setOffset} showPerPage={showPerPage} />\r\n      }\r\n    </CreateUserWrapper>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\ForgotPassword\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Notifications\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Menu\\index.js",["242","243","244"],[],"import { useContext, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { MenuWrapper, MobileMenuIcon } from \"./styles\";\r\nimport { GlobalContext } from \"../../contexts/global\";\r\n\r\nimport Logo from '../../assets/logo.png';\r\nimport DashboardIcon from '../../assets/icons/menu/chart.png';\r\nimport DashboardActiveIcon from '../../assets/icons/menu/chart_active.png';\r\nimport ProductsIcon from '../../assets/icons/menu/inventory.png';\r\nimport ArrowUpIcon from '../../assets/icons/menu/arrow_up.png';\r\nimport ArrowDownIcon from '../../assets/icons/menu/arrow_down.png';\r\nimport MailIcon from '../../assets/icons/menu/mail.png';\r\nimport NotificationsIcon from '../../assets/icons/menu/notifications.png';\r\nimport NotificationsActiveIcon from '../../assets/icons/menu/notifications_active.png';\r\nimport SettingsIcon from '../../assets/icons/menu/settings.png';\r\nimport LogoutIcon from '../../assets/icons/menu/logout.png';\r\nimport HamburguerIcon from '../../assets/icons/menu/hamburguer.png';\r\nimport { getAllProducts, getProductsByCategory, getProductsByPartner } from \"../../services/api\";\r\n\r\nexport default function Menu({ hideRoutes }) {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [activeSubMenu, setActiveSubMenu] = useState(null);\r\n  const [activeInsideSubMenu, setActiveInsideSubMenu] = useState(null);\r\n  const [showFullScreenMenu, setShowFullScreenMenu] = useState(false);\r\n  const { notifications, categories, partners, setProducts, setFilteredProducts, products } = useContext(GlobalContext);\r\n\r\n  function handleClickSubMenu(subMenu) {\r\n    subMenu === activeSubMenu\r\n      ? setActiveSubMenu(null)\r\n      : setActiveSubMenu(subMenu);\r\n  }\r\n\r\n  function handleClickInsideSubMenu(insideSubMenu) {\r\n    insideSubMenu === activeInsideSubMenu\r\n      ? setActiveInsideSubMenu(null)\r\n      : setActiveInsideSubMenu(insideSubMenu)\r\n  }\r\n\r\n  function handleNavigate(route, filterType, filter) {\r\n    if (filterType) {\r\n      setFilteredProducts(() => products.filter(el => el[filterType] === filter));\r\n\r\n      if (filterType === 'categoria') {\r\n        getProductsByCategory(filter).then(products => setFilteredProducts(products));\r\n      }\r\n      if (filterType === 'parceiro') {\r\n        getProductsByPartner(filter).then(products => setFilteredProducts(products));\r\n      }\r\n\r\n      navigate(route + `/${filterType}/${filter}`);\r\n    } else {\r\n      setFilteredProducts([]);\r\n      getAllProducts().then(products => setProducts(products));\r\n      navigate(route);\r\n    }\r\n\r\n    setShowFullScreenMenu(false);\r\n  }\r\n\r\n  if (!hideRoutes.includes(location.pathname)) {\r\n    return (\r\n      <>\r\n        <MobileMenuIcon onClick={() => setShowFullScreenMenu(true)}>\r\n          <img src={HamburguerIcon} alt=\"-\" />\r\n        </MobileMenuIcon>\r\n        <MenuWrapper showFullScreen={showFullScreenMenu}>\r\n          <button className=\"close\" onClick={() => setShowFullScreenMenu(false)}>\r\n            X\r\n          </button>\r\n          <img src={Logo} alt=\"cd\" />\r\n          <span className=\"divider\" />\r\n          <nav>\r\n            <div>\r\n              <h2>Operações</h2>\r\n              <span\r\n                onClick={() => handleNavigate('/assistente-virtual')}\r\n                className={location.pathname === '/assistente-virtual' ? 'active' : ''}\r\n              >\r\n                <img src={location.pathname === '/assistente-virtual' ? DashboardActiveIcon : DashboardIcon} alt=\"\" />\r\n                Assistente Virtual\r\n              </span>\r\n              <span onClick={() => handleClickSubMenu('products')}>\r\n                <img src={ProductsIcon} alt=\"\" />\r\n                Treinamento\r\n                <img\r\n                  className=\"rightIcon\" alt=\"\"\r\n                  src={activeSubMenu === 'products' ? ArrowUpIcon : ArrowDownIcon}\r\n                />\r\n              </span>\r\n              {activeSubMenu === 'products' &&\r\n                <div className=\"subMenuContent\">\r\n                  <span\r\n                    onClick={() => handleNavigate('/produtos-cadastrados')}\r\n                    className={location.pathname === '/produtos-cadastrados' ? 'active' : ''}\r\n                  >\r\n                    Inteligência Artificial\r\n                  </span>\r\n                  \r\n                </div>\r\n              }\r\n            </div>\r\n            <div className=\"mid\">\r\n              <h2>Mensageria</h2>\r\n              <span\r\n                onClick={() => handleNavigate('/notificacoes')}\r\n                className={location.pathname === '/notificacoes' ? 'active' : 'notification'}\r\n              >\r\n                <img\r\n                  src={location.pathname === '/notificacoes' ? NotificationsActiveIcon : NotificationsIcon}\r\n                  alt=\"\"\r\n                />\r\n                Notificações\r\n                {notifications.length > 0 &&\r\n                  <span className=\"badge\">\r\n                    {notifications.length}\r\n                  </span>\r\n                }\r\n              </span>\r\n              <span>\r\n                <img src={MailIcon} alt=\"-\" />\r\n                Mensagens\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <h2>Configurações</h2>\r\n\r\n              <span onClick={() => handleClickSubMenu('configurations')}>\r\n                <img src={SettingsIcon} alt=\"\" />\r\n\r\n                Configurações\r\n\r\n                <img\r\n                  className=\"rightIcon\" alt=\"\"\r\n                  src={activeSubMenu === 'products' ? ArrowUpIcon : ArrowDownIcon}\r\n                />\r\n              </span>\r\n\r\n              {activeSubMenu === 'configurations' &&\r\n                <div className=\"subMenuContent\">\r\n                  <span onClick={() => handleNavigate('/usuarios')}\r\n                    className={location.pathname === '/usuarios' ? 'active' : ''}\r\n                  >\r\n                    Cadastrar Usuário\r\n                  </span>\r\n\r\n                  <span\r\n                    onClick={() => handleNavigate('/produtos-cadastrados')}\r\n                  // className={location.pathname === '/produtos-cadastrados' ? 'active' : ''}\r\n                  >\r\n                    Configurações\r\n                  </span>\r\n                </div>\r\n              }\r\n\r\n              <span onClick={() => handleNavigate('/')}>\r\n                <img src={LogoutIcon} alt=\"\" />\r\n                Sair da aplicação\r\n              </span>\r\n            </div>\r\n          </nav>\r\n        </MenuWrapper>\r\n      </>\r\n    )\r\n  }\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Login\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\Card.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\BarChart.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\PieChart.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Dashboard\\components\\DefaultDashboardContainer.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\services\\api.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Users\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Products\\Pagination.js",["245"],[],"import { PaginationArea } from \"./styles\";\r\n\r\nconst MAX_ITEMS = 5;\r\nconst MAX_LEFT = (MAX_ITEMS - 1) / 2; \r\n\r\nexport default function Pagination({ limit, total, offset, setOffset, showPerPage }) {\r\n  const currentPage = offset ? (offset / limit) + 1 : 1;\r\n  const totalPages = Math.ceil(total / limit);\r\n  const firstPage = Math.max(currentPage - MAX_LEFT, 1); \r\n  const lastItem = offset + Number(showPerPage);\r\n\r\n  function handlePageChange(page){\r\n    setOffset((page - 1) * limit);\r\n  }\r\n\r\n  return (\r\n    <PaginationArea>\r\n      <div>\r\n        Mostrando <span>{offset + 1} - {lastItem > total ? total : lastItem}</span> de <span>{total}</span> produtos\r\n      </div>\r\n      <ul>\r\n        <li \r\n          className=\"previous\"\r\n          onClick={() => {\r\n            currentPage !== 1 && handlePageChange(currentPage - 1)}\r\n          }\r\n        >\r\n          Anterior\r\n        </li>\r\n        {Array.from({ length: Math.min(MAX_ITEMS, totalPages) })\r\n          .map((_, index) => index + firstPage)\r\n          .map((page) => {\r\n            if(page <= totalPages) {\r\n              return (\r\n                <li \r\n                  key={page} \r\n                  className={currentPage === page ? 'active' : ''}\r\n                  onClick={() => handlePageChange(page)}\r\n                >\r\n                  {page}\r\n                </li>\r\n            )}\r\n          })}\r\n          <li \r\n            className=\"next\"\r\n            onClick={() => {\r\n              currentPage < totalPages && handlePageChange(currentPage + 1)}\r\n            }\r\n          >\r\n            Próximo\r\n          </li>\r\n      </ul>\r\n    </PaginationArea>\r\n  )\r\n}","C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\Notifications\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\pages\\ForgotPassword\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Menu\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\utils\\toast.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Button\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Loading\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\InputWithIcon\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Modal\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\PageContainer\\index.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Button\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\InputWithIcon\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\Modal\\styles.js",[],[],"C:\\Users\\Rox\\Documents\\GitHub\\gpt-test-steticLay\\src\\components\\PageContainer\\styles.js",[],[],{"ruleId":"246","severity":1,"message":"247","line":1,"column":25,"nodeType":"248","messageId":"249","endLine":1,"endColumn":34},{"ruleId":"246","severity":1,"message":"250","line":2,"column":10,"nodeType":"248","messageId":"249","endLine":2,"endColumn":14},{"ruleId":"246","severity":1,"message":"251","line":23,"column":11,"nodeType":"248","messageId":"249","endLine":23,"endColumn":21},{"ruleId":"246","severity":1,"message":"252","line":15,"column":10,"nodeType":"248","messageId":"249","endLine":15,"endColumn":22},{"ruleId":"246","severity":1,"message":"253","line":16,"column":20,"nodeType":"248","messageId":"249","endLine":16,"endColumn":31},{"ruleId":"246","severity":1,"message":"254","line":17,"column":10,"nodeType":"248","messageId":"249","endLine":17,"endColumn":17},{"ruleId":"246","severity":1,"message":"255","line":23,"column":10,"nodeType":"248","messageId":"249","endLine":23,"endColumn":24},{"ruleId":"246","severity":1,"message":"256","line":28,"column":10,"nodeType":"248","messageId":"249","endLine":28,"endColumn":17},{"ruleId":"246","severity":1,"message":"257","line":33,"column":10,"nodeType":"248","messageId":"249","endLine":33,"endColumn":22},{"ruleId":"246","severity":1,"message":"258","line":39,"column":10,"nodeType":"248","messageId":"249","endLine":39,"endColumn":22},{"ruleId":"246","severity":1,"message":"259","line":48,"column":10,"nodeType":"248","messageId":"249","endLine":48,"endColumn":15},{"ruleId":"246","severity":1,"message":"260","line":51,"column":18,"nodeType":"248","messageId":"249","endLine":51,"endColumn":27},{"ruleId":"246","severity":1,"message":"261","line":52,"column":10,"nodeType":"248","messageId":"249","endLine":52,"endColumn":22},{"ruleId":"246","severity":1,"message":"262","line":55,"column":9,"nodeType":"248","messageId":"249","endLine":55,"endColumn":22},{"ruleId":"246","severity":1,"message":"263","line":56,"column":9,"nodeType":"248","messageId":"249","endLine":56,"endColumn":26},{"ruleId":"246","severity":1,"message":"264","line":58,"column":10,"nodeType":"248","messageId":"249","endLine":58,"endColumn":21},{"ruleId":"246","severity":1,"message":"265","line":261,"column":12,"nodeType":"248","messageId":"249","endLine":261,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":335,"column":6,"nodeType":"268","endLine":335,"endColumn":8,"suggestions":"269"},{"ruleId":"266","severity":1,"message":"270","line":349,"column":6,"nodeType":"268","endLine":349,"endColumn":44,"suggestions":"271"},{"ruleId":"266","severity":1,"message":"272","line":358,"column":6,"nodeType":"268","endLine":358,"endColumn":14,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":374,"column":11,"nodeType":"276","endLine":374,"endColumn":347},{"ruleId":"246","severity":1,"message":"277","line":5,"column":3,"nodeType":"248","messageId":"249","endLine":5,"endColumn":12},{"ruleId":"246","severity":1,"message":"278","line":6,"column":3,"nodeType":"248","messageId":"249","endLine":6,"endColumn":22},{"ruleId":"246","severity":1,"message":"279","line":9,"column":3,"nodeType":"248","messageId":"249","endLine":9,"endColumn":17},{"ruleId":"246","severity":1,"message":"280","line":14,"column":8,"nodeType":"248","messageId":"249","endLine":14,"endColumn":12},{"ruleId":"246","severity":1,"message":"281","line":15,"column":8,"nodeType":"248","messageId":"249","endLine":15,"endColumn":21},{"ruleId":"246","severity":1,"message":"282","line":16,"column":8,"nodeType":"248","messageId":"249","endLine":16,"endColumn":33},{"ruleId":"246","severity":1,"message":"283","line":17,"column":8,"nodeType":"248","messageId":"249","endLine":17,"endColumn":17},{"ruleId":"246","severity":1,"message":"284","line":18,"column":8,"nodeType":"248","messageId":"249","endLine":18,"endColumn":16},{"ruleId":"246","severity":1,"message":"285","line":20,"column":8,"nodeType":"248","messageId":"249","endLine":20,"endColumn":18},{"ruleId":"246","severity":1,"message":"252","line":25,"column":10,"nodeType":"248","messageId":"249","endLine":25,"endColumn":22},{"ruleId":"246","severity":1,"message":"253","line":26,"column":20,"nodeType":"248","messageId":"249","endLine":26,"endColumn":31},{"ruleId":"246","severity":1,"message":"254","line":27,"column":10,"nodeType":"248","messageId":"249","endLine":27,"endColumn":17},{"ruleId":"246","severity":1,"message":"255","line":33,"column":10,"nodeType":"248","messageId":"249","endLine":33,"endColumn":24},{"ruleId":"246","severity":1,"message":"256","line":38,"column":10,"nodeType":"248","messageId":"249","endLine":38,"endColumn":17},{"ruleId":"246","severity":1,"message":"257","line":43,"column":10,"nodeType":"248","messageId":"249","endLine":43,"endColumn":22},{"ruleId":"246","severity":1,"message":"258","line":49,"column":10,"nodeType":"248","messageId":"249","endLine":49,"endColumn":22},{"ruleId":"246","severity":1,"message":"259","line":58,"column":10,"nodeType":"248","messageId":"249","endLine":58,"endColumn":15},{"ruleId":"246","severity":1,"message":"260","line":61,"column":18,"nodeType":"248","messageId":"249","endLine":61,"endColumn":27},{"ruleId":"246","severity":1,"message":"261","line":62,"column":10,"nodeType":"248","messageId":"249","endLine":62,"endColumn":22},{"ruleId":"246","severity":1,"message":"262","line":65,"column":9,"nodeType":"248","messageId":"249","endLine":65,"endColumn":22},{"ruleId":"246","severity":1,"message":"263","line":66,"column":9,"nodeType":"248","messageId":"249","endLine":66,"endColumn":26},{"ruleId":"246","severity":1,"message":"264","line":68,"column":10,"nodeType":"248","messageId":"249","endLine":68,"endColumn":21},{"ruleId":"246","severity":1,"message":"265","line":271,"column":12,"nodeType":"248","messageId":"249","endLine":271,"endColumn":24},{"ruleId":"266","severity":1,"message":"267","line":345,"column":6,"nodeType":"268","endLine":345,"endColumn":8,"suggestions":"286"},{"ruleId":"266","severity":1,"message":"270","line":359,"column":6,"nodeType":"268","endLine":359,"endColumn":44,"suggestions":"287"},{"ruleId":"266","severity":1,"message":"272","line":368,"column":6,"nodeType":"268","endLine":368,"endColumn":14,"suggestions":"288"},{"ruleId":"274","severity":1,"message":"275","line":384,"column":11,"nodeType":"276","endLine":384,"endColumn":363},{"ruleId":"246","severity":1,"message":"289","line":20,"column":23,"nodeType":"248","messageId":"249","endLine":20,"endColumn":37},{"ruleId":"266","severity":1,"message":"290","line":121,"column":6,"nodeType":"268","endLine":121,"endColumn":27,"suggestions":"291"},{"ruleId":"266","severity":1,"message":"292","line":131,"column":6,"nodeType":"268","endLine":131,"endColumn":13,"suggestions":"293"},{"ruleId":"266","severity":1,"message":"294","line":139,"column":6,"nodeType":"268","endLine":139,"endColumn":8,"suggestions":"295"},{"ruleId":"266","severity":1,"message":"296","line":148,"column":6,"nodeType":"268","endLine":148,"endColumn":14,"suggestions":"297"},{"ruleId":"246","severity":1,"message":"298","line":26,"column":26,"nodeType":"248","messageId":"249","endLine":26,"endColumn":36},{"ruleId":"246","severity":1,"message":"299","line":26,"column":38,"nodeType":"248","messageId":"249","endLine":26,"endColumn":46},{"ruleId":"246","severity":1,"message":"300","line":34,"column":12,"nodeType":"248","messageId":"249","endLine":34,"endColumn":36},{"ruleId":"301","severity":1,"message":"302","line":32,"column":23,"nodeType":"303","messageId":"304","endLine":32,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setSession' is assigned a value but never used.","'importsToday' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'imports' is assigned a value but never used.","'singleProducts' is assigned a value but never used.","'clients' is assigned a value but never used.","'pieChartData' is assigned a value but never used.","'barChartData' is assigned a value but never used.","'dates' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'searchResult' is assigned a value but never used.","'metricsHeader' is assigned a value but never used.","'categoriesOptions' is assigned a value but never used.","'metricsBody' is assigned a value but never used.","'handleSearch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'today'. Either include it or remove the dependency array.","ArrayExpression",["305"],"React Hook useEffect has missing dependencies: 'getBarChartInfos', 'getCardsInfos', 'getMetrics', and 'getPieChartInfos'. Either include them or remove the dependency array.",["306"],"React Hook useEffect has missing dependencies: 'products' and 'selectedProduct'. Either include them or remove the dependency array.",["307"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'ChartsRow' is defined but never used.","'DashboardFilterArea' is defined but never used.","'MetricProducts' is defined but never used.","'Card' is defined but never used.","'InputWithIcon' is defined but never used.","'DefaultDashboardContainer' is defined but never used.","'BarCharts' is defined but never used.","'PieChart' is defined but never used.","'SearchIcon' is defined but never used.",["308"],["309"],["310"],"'setPermissions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has a missing dependency: 'offset'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBody' needs the current value of 'offset'.",["312"],"React Hook useEffect has a missing dependency: 'setUsers'. Either include it or remove the dependency array.",["313"],"React Hook useEffect has missing dependencies: 'offset' and 'users'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setBody' needs the current value of 'offset'.",["314"],"'categories' is assigned a value but never used.","'partners' is assigned a value but never used.","'handleClickInsideSubMenu' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"315","fix":"321"},{"desc":"317","fix":"322"},{"desc":"319","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"Update the dependencies array to be: [today]",{"range":"332","text":"333"},"Update the dependencies array to be: [initialFilter, finalFilter, category, getPieChartInfos, getCardsInfos, getBarChartInfos, getMetrics]",{"range":"334","text":"335"},"Update the dependencies array to be: [products, search, selectedProduct]",{"range":"336","text":"337"},{"range":"338","text":"333"},{"range":"339","text":"335"},{"range":"340","text":"337"},"Update the dependencies array to be: [offset, showPerPage, users]",{"range":"341","text":"342"},"Update the dependencies array to be: [offset, users]",{"range":"343","text":"344"},"Update the dependencies array to be: [setUsers]",{"range":"345","text":"346"},"Update the dependencies array to be: [offset, search, users]",{"range":"347","text":"348"},[11149,11151],"[today]",[11749,11787],"[initialFilter, finalFilter, category, getPieChartInfos, getCardsInfos, getBarChartInfos, getMetrics]",[12027,12035],"[products, search, selectedProduct]",[11541,11543],[12141,12179],[12419,12427],[4096,4117],"[offset, showPerPage, users]",[4296,4303],"[offset, users]",[4478,4480],"[setUsers]",[4663,4671],"[offset, search, users]"]